<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sagebionetworks</groupId>
		<artifactId>services</artifactId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<groupId>org.sagebionetworks</groupId>
	<artifactId>services-repository</artifactId>
	<packaging>war</packaging>
	<name>Platform Repository Service</name>

	<dependencies>

		<!-- Sage Bionetworks Dependencies -->
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-table-query</artifactId>
		</dependency>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>repository-managers</artifactId>
		</dependency>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>auth-util</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-securityUtilities</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-logging</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Spring Framework dependencies -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
		</dependency>			
		<!-- ATOM -->
		<dependency>
			<groupId>rome</groupId>
			<artifactId>rome</artifactId>
			<version>0.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
		</dependency>

		<!-- Jackson JSON Mapper -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-runner</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
		    <groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>20040616</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

	</dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<plugins>
			<!-- Make a WAR file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<webResources>
						<resource>
							<directory>src/main/webapp</directory>
							<filtering>true</filtering>
						</resource>
					</webResources>
				</configuration>
			</plugin>

			<!-- This allows use to run the servlet container from maven via mvn tomcat:run 
				or deploy to a local tomcat via tomcat:deploy -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<!-- Deploy this as the root application -->
					<path>/</path>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>-Xmx1024m -Xms128m -XX:MaxPermSize=512m</argLine>
				</configuration>
			</plugin>

			<!-- Added this path to the test classpath so that we do not need to copy 
				and paste our servlet config into a separate file even though we want the 
				exact same config for testing -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.3</version>
				<executions>
					<execution>
						<id>add-test-resource</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/main/webapp/WEB-INF</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<excludePackageNames>
						org.sagebionetworks.repo.web.service.metadata.*
						:org.sagebionetworks.repo.web.filter.*
						:org.sagebionetworks.repo.web.service.*
						:org.sagebionetworks.sweeper.log4j.*
						:profiler.org.*
					</excludePackageNames>
					<doclet>org.sagebionetworks.javadoc.web.services.SpringMVCDoclet</doclet>
					<docletArtifact>
						<groupId>org.sagebionetworks</groupId>
						<artifactId>lib-javadoc</artifactId>
						<version>${project.version}</version>
					</docletArtifact>
					<additionalparam>-verbose</additionalparam>
					<useStandardDocletOptions>false</useStandardDocletOptions>
					<destDir>${project.build.directory}/javadoc/restdocs</destDir>
					<!-- This name is used to link to the authentication controller -->
					<additionalJOption>-authControllerName org.sagebionetworks.auth.AuthenticationController</additionalJOption>
					<additionnalDependencies>
						<additionnalDependency>
							<groupId>org.sagebionetworks</groupId>
							<artifactId>lib-table-query</artifactId>
							<version>${project.version}</version>
						</additionnalDependency>
					</additionnalDependencies>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>1.2.1</version>
				<executions>
					<execution>
						<phase>deploy</phase>
						<goals>
							<goal>java</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<mainClass>org.sagebionetworks.repo.PublishToS3</mainClass>
					<arguments>
						<argument>${project.build.directory}/javadoc/restdocs</argument>
					</arguments>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>

