<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
	version="2.5">

	<display-name>SagePlatformRepository</display-name>

	<welcome-file-list>
		<welcome-file>index.html</welcome-file>
	</welcome-file-list>

	<error-page>
		<error-code>404</error-code>
		<location>/errorPages/404_error.jsp</location>
	</error-page>

	<error-page>
		<error-code>500</error-code>
		<location>/errorPages/500_error.jsp</location>
	</error-page>

	<error-page>
		<exception-type>java.lang.Throwable</exception-type>
		<location>/errorPages/generic_error.jsp</location>
	</error-page>

	<!-- The context params that read by ContextLoaderListener -->

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
      /WEB-INF/repository-context.xml
    </param-value>
	</context-param>


	<!-- This listener will load other application context file in addition 
		to springweb-servlet.xml -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>

	<!-- Some browsers do not support PUT and DELETE methods, this filter will 
		examine the form field parameter _method -->
	<filter>
		<filter-name>httpMethodFilter</filter-name>
		<filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>httpMethodFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 	This filter will look for the session token as a cookie, 
			if it finds it, the token will be added to the header of the request  -->
	<filter>
		<filter-name>cookieFilter</filter-name>
		<filter-class>org.sagebionetworks.authutil.CookieSessionTokenFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>cookieFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>CrowdAuth</filter-name>
		<filter-class>org.sagebionetworks.authutil.CrowdAuthenticationFilter</filter-class>
		<init-param>
			<param-name>allow-anonymous</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>CrowdAuth</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- filter>
		<filter-name>TermsOfUse</filter-name>
		<filter-class>org.sagebionetworks.authutil.TermsOfUseFilter</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>TermsOfUse</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping-->

	<filter>
		<filter-name>profileFilter</filter-name>
		<filter-class>profiler.org.sagebionetworks.ProfileFilter</filter-class>
		<init-param>
			<param-name>default_value</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>profileFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>jsonpCallbackFilter</filter-name>
		<!-- This filter allows JSONP to be returned for methods that are already 
			returning JSON -->
		<filter-class>org.sagebionetworks.repo.web.filter.JsonpCallbackFilter</filter-class>
		<init-param>
			<param-name>default_value</param-name>
			<param-value>false</param-value>
		</init-param>
	</filter>

	<filter-mapping>
		<filter-name>jsonpCallbackFilter</filter-name>
		<!-- This filter should only be used on publicly accessible methods to 
			minimize the risks of Cross-site request forgery (CSRF) associated with JSONP. 
			Only add patterns that are public! -->
		<url-pattern>/repo/v1/concept/*</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>jsonpCallbackFilter</filter-name>
		<!-- This filter should only be used on publicly accessible methods to 
			minimize the risks of Cross-site request forgery (CSRF) associated with JSONP. 
			Only add patterns that are public! -->
		<url-pattern>/repo/v1/userGroupHeaders/*</url-pattern>
	</filter-mapping>
	
	<servlet>
		<servlet-name>repository</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- These two parameters are required to register an interceptor with 
			the org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter. 
			Without them the handler simply will not be used. jmhill 12/10/11 -->
		<init-param>
			<param-name>detectAllHandlerMappings</param-name>
			<param-value>true</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>repository</servlet-name>
		<url-pattern>/repo/v1/*</url-pattern>
	</servlet-mapping>

</web-app>
