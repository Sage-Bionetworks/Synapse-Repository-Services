<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- Turn on Spring's autoproxy using AspectJ's @Aspect annotations. -->
	<aop:aspectj-autoproxy />

	<import resource="classpath:concept-dao-beans.spb.xml" />
	<import resource="classpath:dao-beans.spb.xml" />
	<import resource="classpath:controllerProfiler-spb.xml" />
	<import resource="classpath:activityLogger-spb.xml" />

	<!-- The real Node DAO -->
	<bean id="nodeManager" class="org.sagebionetworks.repo.manager.NodeManagerImpl" />
	<bean id="nodeInheritanceManager"
		class="org.sagebionetworks.repo.manager.NodeInheritanceManagerImpl" />


	<!-- The Entity manager -->
	<bean id="entityManager" class="org.sagebionetworks.repo.manager.EntityManagerImpl" />

	<!-- Make sure we can watch for deadlock on all methods of the Generic Entity Controller -->	
	<bean id="deadlockWatcher"
		class="org.sagebionetworks.repo.web.DeadlockWatcher" />
		
	<!-- The Service Provider  -->
	<bean id="serviceProider"
		class="org.sagebionetworks.repo.web.service.ServiceProvider" />

	<!-- The AccessApproval Service  -->
	<bean id="accessApprovalService"
		class="org.sagebionetworks.repo.web.service.AccessApprovalServiceImpl" />
	
	<!-- The AccessRequirement Service  -->
	<bean id="accessRequirementService"
		class="org.sagebionetworks.repo.web.service.AccessRequirementServiceImpl" />
		
	<!-- The Administration Service  -->
	<bean id="administrationService"
		class="org.sagebionetworks.repo.web.service.AdministrationServiceImpl" />
		
	<!-- The Concept Service  -->
	<bean id="conceptService"
		class="org.sagebionetworks.repo.web.service.ConceptServiceImpl" />

	<!-- The Entity Service  -->
	<bean id="entityService"
		class="org.sagebionetworks.repo.web.service.EntityServiceImpl" />
		
	<!-- The S3Token Service  -->
	<bean id="s3TokenService"
		class="org.sagebionetworks.repo.web.service.S3TokenServiceImpl" />
		
	<!-- The Search Service  -->
	<bean id="searchService"
		class="org.sagebionetworks.repo.web.service.SearchServiceImpl" />

	<!-- The UserProfile Service -->
	<bean id="userProfileService"
		class="org.sagebionetworks.repo.web.service.UserProfileServiceImpl" />
		
	<!-- The UserGroup Service -->
	<bean id="userGroupService"
		class="org.sagebionetworks.repo.web.service.UserGroupServiceImpl" />

	<!-- The EntityBundle Service  -->
	<bean id="entityBundleService"
		class="org.sagebionetworks.repo.web.service.EntityBundleServiceImpl" />

	<!-- The Location helper -->
	<bean id="locationHelper" class="org.sagebionetworks.repo.util.LocationHelpersImpl" />

	<bean id="referenceUtil" class="org.sagebionetworks.repo.util.ReferenceUtilImpl" />

	<bean id="authorizationManager"
		class="org.sagebionetworks.repo.manager.AuthorizationManagerImpl" />

	<bean id="permissionsManager" class="org.sagebionetworks.repo.manager.PermissionsManagerImpl" />

	<bean id="userProfileManager" class="org.sagebionetworks.repo.manager.UserProfileManagerImpl" />

	<bean id="accessRequirementManager" class="org.sagebionetworks.repo.manager.AccessRequirementManagerImpl" />

	<bean id="accessApprovalManager" class="org.sagebionetworks.repo.manager.AccessApprovalManagerImpl" />

	<bean id="amazonClientFactory" class="org.sagebionetworks.repo.util.AmazonClientFactoryImpl"
		scope="singleton" />

	<bean id="userManager" class="org.sagebionetworks.repo.manager.UserManagerImpl" />

	<bean id="userDAO" class="org.sagebionetworks.repo.util.UserDAOProxy"
		scope="singleton" />
	<bean id="userDAOImpl" class="org.sagebionetworks.authutil.CrowdUserDAO"
		scope="singleton" />

	<bean id="backupManager"
		class="org.sagebionetworks.repo.manager.backup.NodeBackupManagerImpl"
		scope="singleton" />

	<bean id="nodeOwnerMigrator"
		class="org.sagebionetworks.repo.manager.backup.migration.NodeOwnerMigratorImpl"
		scope="singleton" />

	<bean id="migrationDriver"
		class="org.sagebionetworks.repo.manager.backup.migration.MigrationDriverImpl"
		scope="singleton">
		<property name="revisionSteps">
			<list>
				<bean
					class="org.sagebionetworks.repo.manager.backup.migration.ApplyMigrationData">
					<constructor-arg>
						<bean
							class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
							<property name="targetClass">
								<value>org.sagebionetworks.repo.model.registry.MigrationDataLoaderImpl
								</value>
							</property>
							<property name="targetMethod">
								<value>getMigrationData</value>
							</property>
						</bean>
					</constructor-arg>
				</bean>
				<bean
					class="org.sagebionetworks.repo.manager.backup.migration.GenericMigrator">
					<constructor-arg>
						<bean id="migrationSpecData"
							class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
							<property name="targetClass">
								<value>org.sagebionetworks.repo.model.registry.MigrationSpecDataLoaderImpl
								</value>
							</property>
							<property name="targetMethod">
								<value>getMigrationSpecData</value>
							</property>
						</bean>
					</constructor-arg>
				</bean>
				<bean
					class="org.sagebionetworks.repo.manager.backup.migration.DataTypeMigrator">
				</bean>
				<bean
					class="org.sagebionetworks.repo.manager.backup.migration.NodeOwnerMigratorImpl">
				</bean>
			</list>
		</property>
	</bean>

	<bean id="nodeSerializer"
		class="org.sagebionetworks.repo.manager.backup.NodeSerializerImpl"
		scope="singleton" />

	<bean id="searchDocumentDriver"
		class="org.sagebionetworks.repo.manager.backup.SearchDocumentDriverImpl"
		scope="singleton" />

	<bean id="entityBackupDriver"
		class="org.sagebionetworks.repo.manager.backup.NodeBackupDriverImpl"
		scope="singleton" />

	<bean id="principalBackupDriver"
		class="org.sagebionetworks.repo.manager.backup.PrincipalBackupDriver"
		scope="singleton" />

	<bean id="accessRequirementBackupDriver"
		class="org.sagebionetworks.repo.manager.backup.AccessRequirementBackupDriver"
		scope="singleton" />

	<bean id="stackStatusManager" class="org.sagebionetworks.repo.manager.StackStatusManagerImpl"
		scope="singleton" />

	<bean id="conceptCache"
		class="org.sagebionetworks.repo.manager.ontology.ConceptCacheLocalImpl"
		scope="singleton" />

	<bean id="conceptManager"
		class="org.sagebionetworks.repo.manager.ontology.ConceptManagerImpl"
		scope="singleton" />

	<bean id="s3TokenManager" class="org.sagebionetworks.repo.manager.S3TokenManagerImpl"
		scope="singleton" />

	<bean id="s3Utility" class="org.sagebionetworks.repo.manager.AmazonS3UtilityImpl"
		scope="singleton" />

	<bean id="attachmentManager" class="org.sagebionetworks.repo.manager.AttachmentManagerImpl"
		scope="singleton" />

	<bean id="schemaManager" class="org.sagebionetworks.repo.manager.SchemaManagerImpl"
		scope="singleton" />

	<!-- The thread pool used by the backup/restore daemons -->
	<bean id="backupDaemonThreadPool"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass">
			<value>java.util.concurrent.Executors</value>
		</property>
		<property name="targetMethod">
			<value>newFixedThreadPool</value>
		</property>
		<property name="arguments"
			ref="stackConfiguration.backupRestoreThreadPoolMaximum" />
	</bean>

	<!-- The second thread pool used by the backup/restore daemons -->
	<bean id="backupDaemonThreadPool2"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass">
			<value>java.util.concurrent.Executors</value>
		</property>
		<property name="targetMethod">
			<value>newFixedThreadPool</value>
		</property>
		<property name="arguments"
			ref="stackConfiguration.backupRestoreThreadPoolMaximum" />
	</bean>

	<bean id="backupDaemonLauncher"
		class="org.sagebionetworks.repo.manager.backup.daemon.BackupDaemonLauncherImpl"
		scope="singleton" >
		<!--  the keys in this map  match the enum MigratableObjectType -->
		<property name="backupDriverMap">
			<map>
				<entry key="PRINCIPAL">
					<ref bean="principalBackupDriver" />
				</entry>
				<entry key="ENTITY">
					<ref bean="entityBackupDriver" />
				</entry>
				<entry key="ACCESSREQUIREMENT">
					<ref bean="accessRequirementBackupDriver" />
				</entry>
			</map>
		</property>
	</bean>

	<!-- Provides validation for all types -->
	<bean id="allTypesValidator"
		class="org.sagebionetworks.repo.web.controller.metadata.AllTypesValidatorImpl"
		scope="singleton" />

	<bean id="datasetMetadataProvider"
		class="org.sagebionetworks.repo.web.controller.metadata.DatasetMetadataProvider"
		scope="singleton" />
	<bean id="inputDataLayerProvider"
		class="org.sagebionetworks.repo.web.controller.metadata.LayerMetadataProvider"
		scope="singleton" />
	<bean id="projectMetadataProvider"
		class="org.sagebionetworks.repo.web.controller.metadata.ProjectMetadataProvider"
		scope="singleton" />
	<bean id="storedLayerPreviewMetadataProvider"
		class="org.sagebionetworks.repo.web.controller.metadata.PreviewMetadataProvider"
		scope="singleton" />
	<bean id="folderMetadataProvider"
		class="org.sagebionetworks.repo.web.controller.metadata.FolderMetadataProvider"
		scope="singleton" />
	<bean id="analysisMetadataProvider"
		class="org.sagebionetworks.repo.web.controller.metadata.AnalysisMetadataProvider"
		scope="singleton" />
	<bean id="stepMetadataProvider"
		class="org.sagebionetworks.repo.web.controller.metadata.StepMetadataProvider"
		scope="singleton" />
	<bean id="codeMetadataProvider"
		class="org.sagebionetworks.repo.web.controller.metadata.CodeMetadataProvider"
		scope="singleton" />
	<bean id="locationableMetadataProvider"
		class="org.sagebionetworks.repo.web.controller.metadata.LocationableMetadataProvider"
		scope="singleton" />

	<!-- the keys in this map must be the values of the org.sagebionetworks.repo.modelObjectType 
		enum -->
	<bean id="metadataProviderFactory"
		class="org.sagebionetworks.repo.web.controller.metadata.MetadataProviderFactoryImpl"
		scope="singleton">
		<property name="metadataProviderMap">
			<map>
				<entry key="dataset">
					<ref bean="datasetMetadataProvider" />
				</entry>
				<entry key="layer">
					<ref bean="inputDataLayerProvider" />
				</entry>
				<entry key="project">
					<ref bean="projectMetadataProvider" />
				</entry>
				<entry key="preview">
					<ref bean="storedLayerPreviewMetadataProvider" />
				</entry>
				<entry key="folder">
					<ref bean="folderMetadataProvider" />
				</entry>
				<entry key="analysis">
					<ref bean="analysisMetadataProvider" />
				</entry>
				<entry key="step">
					<ref bean="stepMetadataProvider" />
				</entry>
				<entry key="code">
					<ref bean="codeMetadataProvider" />
				</entry>
				<entry key="locationable">
					<ref bean="locationableMetadataProvider" />
				</entry>
			</map>
		</property>
	</bean>

	<!-- A profiler that logs performance data for all bean method calls. -->
	<bean id="profiler" class="profiler.org.sagebionetworks.Profiler">
		<property name="handlers">
			<list>
				<bean name="loggingProfiler" class="profiler.org.sagebionetworks.LoggingProfiler" />
				<bean name="perThreadProfiler" class="profiler.org.sagebionetworks.PerThreadHandler" />
			</list>
		</property>
	</bean>

	<!-- A manager that returns all system objects and their dependencies. -->
	<bean id="dependencyManager" class="org.sagebionetworks.repo.manager.backup.migration.DependencyManagerImpl">
		<property name="migratableDaos">
			<list>
				<ref bean="userGroupDAO"/>
				<ref bean="nodeDao"/>
				<ref bean="accessRequirementDAO"/>
			</list>
		</property>
	</bean>

</beans>
