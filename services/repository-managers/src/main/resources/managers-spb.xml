<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       ">

    <context:annotation-config />
	<!-- Turn on Spring's autoproxy using AspectJ's @Aspect annotations. -->
	<aop:aspectj-autoproxy />

	<import resource="classpath:concept-dao-beans.spb.xml" />
	<import resource="classpath:dao-beans.spb.xml" />
	<import resource="classpath:aws-topic-publisher.spb.xml" />
	<import resource="classpath:dynamo-dao-spb.xml" />

	<!-- The real Node DAO -->
	<bean id="nodeManager" class="org.sagebionetworks.repo.manager.NodeManagerImpl" />
	<bean id="nodeInheritanceManager"
		class="org.sagebionetworks.repo.manager.NodeInheritanceManagerImpl" />

	<!-- The Entity manager -->
	<bean id="entityManager" class="org.sagebionetworks.repo.manager.EntityManagerImpl" />

	<!-- Activity manager -->
	<bean id="activityManager" class="org.sagebionetworks.repo.manager.ActivityManagerImpl" />

	<!-- Trash manager -->
	<bean id="trashManager" class="org.sagebionetworks.repo.manager.trash.TrashManagerImpl" />

	<!-- Fixed Memory Pool - Used to provided a fix amount of memory used for transfering files
	      from http input streams to S3 -->
	<bean id="fileTransferFixedMemoryPool" class="org.sagebionetworks.repo.util.FixedMemoryPool" init-method="initialize">
	    <!-- This first argument controls the maximum memory used by the pool -->
	    <property name="maxMemoryBytes" ref="stackConfiguration.maxFileTransferMemoryPoolBytes"/>
	    <property name="blockSizeBytes" ref="stackConfiguration.fileTransferBufferSizeBytes"/>
	</bean>
	
	<!-- Memory File Transfer Strategy -->
	<bean id="memoryTransferStrategy" class="org.sagebionetworks.repo.manager.file.transfer.MemoryTransferStrategy" />
	
	<!-- Temp file provider -->
	<bean id="tempFileProvider" class="org.sagebionetworks.repo.util.TempFileProviderImpl" />
	
	<!-- Temp File Transfer Strategy -->
	<bean id="tempFileTransferStrategy" class="org.sagebionetworks.repo.manager.file.transfer.TempFileTransferStrategy" />
	
	<!-- File Upload manager -->
	<bean id="fileHandleManager" class="org.sagebionetworks.repo.manager.file.FileHandleManagerImpl" init-method="initialize" >
	    <!-- The memory strategy is the primary -->
	    <property name="primaryStrategy" ref="memoryTransferStrategy"/>
	   	<!-- The temp strategy is the fall-back -->
	    <property name="fallbackStrategy" ref="tempFileTransferStrategy"/>
	</bean>
	
	<!-- The preview manager -->
	<bean id="previewManager" class="org.sagebionetworks.repo.manager.file.preview.PreviewManagerImpl" init-method="initialize">
	    <!-- The list of preview generators-->
	    <property name="generatorList">
	        <list>
	            <bean id="imagePreviewGenerator" class="org.sagebionetworks.repo.manager.file.preview.ImagePreviewGenerator" />
	            <bean id="textPreviewGenerator" class="org.sagebionetworks.repo.manager.file.preview.TextPreviewGenerator" />
	            <bean id="zipPreviewGenerator" class="org.sagebionetworks.repo.manager.file.preview.ZipPreviewGenerator" />
	        </list>
	    </property>
	    <!-- The maximum amount of memory to uses -->
	   	<property name="maxPreviewMemory" ref="stackConfiguration.maxFilePreviewMemoryPoolBytes"/>
	</bean>
	
	<!-- The Location helper -->
	<bean id="locationHelper" class="org.sagebionetworks.repo.util.LocationHelpersImpl" />

	<bean id="referenceUtil" class="org.sagebionetworks.repo.util.ReferenceUtilImpl" />

	<bean id="authorizationManager"
		class="org.sagebionetworks.repo.manager.AuthorizationManagerImpl" />

	<bean id="permissionsManager" class="org.sagebionetworks.repo.manager.PermissionsManagerImpl" />

	<bean id="userProfileManager" class="org.sagebionetworks.repo.manager.UserProfileManagerImpl" />

	<bean id="accessRequirementManager" class="org.sagebionetworks.repo.manager.AccessRequirementManagerImpl" />

	<bean id="accessApprovalManager" class="org.sagebionetworks.repo.manager.AccessApprovalManagerImpl" />

	<bean id="amazonClientFactory" class="org.sagebionetworks.repo.util.AmazonClientFactoryImpl"
		scope="singleton" />

	<bean id="userManager" class="org.sagebionetworks.repo.manager.UserManagerImpl" />

	<bean id="userDAO" class="org.sagebionetworks.repo.util.UserDAOProxy"
		scope="singleton" />
	<bean id="userDAOImpl" class="org.sagebionetworks.authutil.CrowdUserDAO"
		scope="singleton" />

	<bean id="backupManager"
		class="org.sagebionetworks.repo.manager.backup.NodeBackupManagerImpl"
		scope="singleton" />

	<bean id="nodeOwnerMigrator"
		class="org.sagebionetworks.repo.manager.backup.migration.NodeOwnerMigratorImpl"
		scope="singleton" />

	<bean id="migrationDriver"
		class="org.sagebionetworks.repo.manager.backup.migration.MigrationDriverImpl"
		scope="singleton">
		<property name="revisionSteps">
			<list>
				<bean
					class="org.sagebionetworks.repo.manager.backup.migration.ApplyMigrationData">
					<constructor-arg>
						<bean
							class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
							<property name="targetClass">
								<value>org.sagebionetworks.repo.model.registry.MigrationDataLoaderImpl
								</value>
							</property>
							<property name="targetMethod">
								<value>getMigrationData</value>
							</property>
						</bean>
					</constructor-arg>
				</bean>
				<bean
					class="org.sagebionetworks.repo.manager.backup.migration.GenericMigrator">
					<constructor-arg>
						<bean id="migrationSpecData"
							class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
							<property name="targetClass">
								<value>org.sagebionetworks.repo.model.registry.MigrationSpecDataLoaderImpl
								</value>
							</property>
							<property name="targetMethod">
								<value>getMigrationSpecData</value>
							</property>
						</bean>
					</constructor-arg>
				</bean>
				<bean
					class="org.sagebionetworks.repo.manager.backup.migration.DataTypeMigrator">
				</bean>
				<bean
					class="org.sagebionetworks.repo.manager.backup.migration.NodeOwnerMigratorImpl">
				</bean>
			</list>
		</property>
	</bean>
	
	<bean id="backupDriver" class="org.sagebionetworks.repo.manager.backup.daemon.BackupDriverImpl" scope="singleton"/>
	
	<bean id="migrationManager" class="org.sagebionetworks.repo.manager.migration.MigrationManagerImpl" scope="singleton">
		<property name="backupBatchMax"
			ref="stackConfiguration.migrationBackupBatchMax" />
	</bean>

	<bean id="nodeSerializer"
		class="org.sagebionetworks.repo.manager.backup.NodeSerializerImpl"
		scope="singleton" />


	<bean id="stackStatusManager" class="org.sagebionetworks.repo.manager.StackStatusManagerImpl"
		scope="singleton" />

	<bean id="conceptCache"
		class="org.sagebionetworks.repo.manager.ontology.ConceptCacheLocalImpl"
		scope="singleton" />

	<bean id="conceptManager"
		class="org.sagebionetworks.repo.manager.ontology.ConceptManagerImpl"
		scope="singleton" />

	<bean id="s3TokenManager" class="org.sagebionetworks.repo.manager.S3TokenManagerImpl"
		scope="singleton" />

	<bean id="s3Utility" class="org.sagebionetworks.repo.manager.AmazonS3UtilityImpl"
		scope="singleton" />

	<bean id="storageUsageManager"
		class="org.sagebionetworks.repo.manager.StorageUsageManagerImpl"
		scope="singleton" />

	<bean id="attachmentManager" class="org.sagebionetworks.repo.manager.AttachmentManagerImpl"
		scope="singleton" />

	<bean id="schemaManager" class="org.sagebionetworks.repo.manager.SchemaManagerImpl"
		scope="singleton" />
		
	<bean id="evaluationManager" class="org.sagebionetworks.evaluation.manager.EvaluationManagerImpl" 
		scope="singleton" />
		
	<bean id="participantManager" class="org.sagebionetworks.evaluation.manager.ParticipantManagerImpl" 
		scope="singleton" />
		
	<bean id="submissionManager" class="org.sagebionetworks.evaluation.manager.SubmissionManagerImpl" 
		scope="singleton" />
	
	<bean id="wikiManager" class="org.sagebionetworks.repo.manager.wiki.WikiManagerImpl" 
		scope="singleton" />

	<bean id="entityDoiManager" class="org.sagebionetworks.repo.manager.doi.EntityDoiManagerImpl" 
		scope="singleton" />

	<bean id="doiAdminManager" class="org.sagebionetworks.repo.manager.doi.DoiAdminManagerImpl" 
		scope="singleton" />

	<bean id="dynamoAdminManager" class="org.sagebionetworks.repo.manager.dynamo.DynamoAdminManagerImpl" 
		scope="singleton" />

	<bean id="nodeTreeQueryManager" class="org.sagebionetworks.repo.manager.dynamo.NodeTreeQueryManagerImpl"
		scope="singleton" />

	<bean id="storageQuotaManager" class="org.sagebionetworks.repo.manager.StorageQuotaManagerImpl"
		scope="singleton" />

	<!-- The thread pool used by the backup/restore daemons -->
	<bean id="backupDaemonThreadPool"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass">
			<value>java.util.concurrent.Executors</value>
		</property>
		<property name="targetMethod">
			<value>newFixedThreadPool</value>
		</property>
		<property name="arguments"
			ref="stackConfiguration.backupRestoreThreadPoolMaximum" />
	</bean>

	<!-- The second thread pool used by the backup/restore daemons -->
	<bean id="backupDaemonThreadPool2"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass">
			<value>java.util.concurrent.Executors</value>
		</property>
		<property name="targetMethod">
			<value>newFixedThreadPool</value>
		</property>
		<property name="arguments"
			ref="stackConfiguration.backupRestoreThreadPoolMaximum" />
	</bean>

	<bean id="backupDaemonLauncher"
		class="org.sagebionetworks.repo.manager.backup.daemon.BackupDaemonLauncherImpl"
		scope="singleton" >
	</bean>
	
		<!-- Used to read document from repo -->
	<bean id="searchDocumentDriver"
		class="org.sagebionetworks.repo.manager.search.SearchDocumentDriverImpl"
		scope="singleton" />

</beans>
