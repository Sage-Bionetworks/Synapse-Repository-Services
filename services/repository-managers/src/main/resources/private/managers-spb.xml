<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       ">

    <context:annotation-config />
	<!-- Turn on Spring's autoproxy using AspectJ's @Aspect annotations. -->
	<aop:aspectj-autoproxy />

	<import resource="classpath:upload-dao.spb.xml" />

	<!-- The real Node DAO -->
	<bean id="nodeManager" class="org.sagebionetworks.repo.manager.NodeManagerImpl" />
	<bean id="nodeInheritanceManager"
		class="org.sagebionetworks.repo.manager.NodeInheritanceManagerImpl" />

	<!-- The Entity manager -->
	<bean id="entityManager" class="org.sagebionetworks.repo.manager.EntityManagerImpl">
		<property name="allowCreationOfOldEntities" ref="stackConfiguration.allowCreationOfOldEntities"/>
	</bean>
	
	<bean id="entityQueryManager" class="org.sagebionetworks.repo.manager.EntityQueryManagerImpl" />

	<!-- Activity manager -->
	<bean id="activityManager" class="org.sagebionetworks.repo.manager.ActivityManagerImpl" />
	
	<bean id="principalManager" class="org.sagebionetworks.repo.manager.principal.PrincipalManagerImpl" />
	
	<bean id="notificationManager" class="org.sagebionetworks.repo.manager.NotificationManagerImpl" />
	
	<bean id="CloudMailInManager" class="org.sagebionetworks.repo.manager.CloudMailInManagerImpl" />
	
	<bean id="dockerManager" class="org.sagebionetworks.repo.manager.DockerManagerImpl" />
	
	<bean id="googleOAuth2Provider" class="org.sagebionetworks.repo.manager.oauth.GoogleOAuth2Provider">
		<constructor-arg ref="stackConfiguration.oAuth2GoogleClientId" index="0" />
		<constructor-arg ref="stackConfiguration.oAuth2GoogleClientSecret" index="1" />
	</bean>

	<bean id="orcidOAuth2Provider" class="org.sagebionetworks.repo.manager.oauth.OrcidOAuth2Provider">
		<constructor-arg ref="stackConfiguration.oAuth2ORCIDClientId" index="0" />
		<constructor-arg ref="stackConfiguration.oAuth2ORCIDClientSecret" index="1" />
	</bean>

	<bean id="oAuthManager" class="org.sagebionetworks.repo.manager.oauth.OAuthManagerImpl">
		<property name="providerMap">
			<map>
				<entry
					key="GOOGLE_OAUTH_2_0"
					value-ref="googleOAuth2Provider" />
				<entry
					key="ORCID"
					value-ref="orcidOAuth2Provider" />
			</map>
		</property>

	</bean>

	<!-- Trash manager -->
	<bean id="trashManager" class="org.sagebionetworks.repo.manager.trash.TrashManagerImpl" />
	
	<bean id="multipartManager" class="org.sagebionetworks.repo.manager.file.MultipartManagerImpl" />
	
	<bean id="multipartManagerV2" class="org.sagebionetworks.repo.manager.file.MultipartManagerV2Impl"  />
	
	<bean name="userThrottleMemoryCountingSemaphore" class="org.sagebionetworks.repo.model.semaphore.MemoryCountingSemaphoreImpl" scope="singleton">
		<constructor-arg index="0">
		<bean class="org.sagebionetworks.common.util.ClockImpl"/>
		</constructor-arg>
	</bean>
	
	<bean name="userThrottleMemoryTimeBlockSemaphore" class="org.sagebionetworks.repo.model.semaphore.MemoryTimeBlockCountingSemaphoreImpl" scope="singleton"/>
	
	<bean name="userApiThrottleMemoryTimeBlockSemaphore" class="org.sagebionetworks.repo.model.semaphore.MemoryTimeBlockCountingSemaphoreImpl" scope="singleton"/>
	
	<bean name="authenticationThrottleMemoryCountingSemaphore" class="org.sagebionetworks.repo.model.semaphore.MemoryCountingSemaphoreImpl" scope="singleton">
		<constructor-arg index="0">
		<bean class="org.sagebionetworks.common.util.ClockImpl"/>
		</constructor-arg>
	</bean>	
	
	<bean id="semaphoreManager" class="org.sagebionetworks.repo.manager.SemaphoreManagerImpl" />
	
	<!-- The thread pool used by the asynchronous fileupload primary daemons -->
	<bean id="uploadFileDaemonThreadPoolPrimary"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass">
			<value>java.util.concurrent.Executors</value>
		</property>
		<property name="targetMethod">
			<value>newFixedThreadPool</value>
		</property>
		<property name="arguments" ref="stackConfiguration.fileMultipartUploadDaemonMainMaxThreads"/>
	</bean>

	<!-- The thread pool used by the asynchronous fileupload secondary daemons -->
	<bean id="uploadFileDaemonThreadPoolSecondary"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass">
			<value>java.util.concurrent.Executors</value>
		</property>
		<property name="targetMethod">
			<value>newFixedThreadPool</value>
		</property>
		<property name="arguments" ref="stackConfiguration.fileMultipartUploadDaemonCopyPartMaxThreads"/>
	</bean>
	
	<!-- Temp file provider -->
	<bean id="tempFileProvider" class="org.sagebionetworks.repo.model.file.TempFileProviderImpl" />
	
	<!-- File Upload manager -->
	<bean id="fileHandleManager" class="org.sagebionetworks.repo.manager.file.FileHandleManagerImpl" init-method="initialize" >
	    <property name="multipartUploadDaemonTimeoutMS" ref="stackConfiguration.fileMultipartUploadDaemonTimeoutMS"/>
	</bean>
	
	<!-- The preview manager -->
	<bean id="previewManager" class="org.sagebionetworks.repo.manager.file.preview.PreviewManagerImpl" init-method="initialize">
	    <!-- The list of preview generators, order is important, first generator found wins-->
	    <property name="generatorList">
	        <list>
	            <bean class="org.sagebionetworks.repo.manager.file.preview.ImagePreviewGenerator" />
	            <bean
					class="org.sagebionetworks.repo.manager.file.preview.TabCsvPreviewGenerator">
					<constructor-arg>
						<bean
							class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
							<property name="targetClass">
								<value>org.sagebionetworks.repo.manager.file.preview.TabCsvPreviewGenerator
								</value>
							</property>
							<property name="targetMethod">
								<value>getComma</value>
							</property>
						</bean>
					</constructor-arg>
				</bean>
	            <bean
					class="org.sagebionetworks.repo.manager.file.preview.TabCsvPreviewGenerator">
					<constructor-arg>
						<bean
							class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
							<property name="targetClass">
								<value>org.sagebionetworks.repo.manager.file.preview.TabCsvPreviewGenerator
								</value>
							</property>
							<property name="targetMethod">
								<value>getTab</value>
							</property>
						</bean>
					</constructor-arg>
				</bean>
	            <bean class="org.sagebionetworks.repo.manager.file.preview.TextPreviewGenerator" />
	            <bean class="org.sagebionetworks.repo.manager.file.preview.ZipPreviewGenerator" />
	        </list>
	    </property>
	    <!-- The maximum amount of memory to uses -->
	   	<property name="maxPreviewMemory" ref="stackConfiguration.maxFilePreviewMemoryPoolBytes"/>
	</bean>
	
	<bean id="referenceUtil" class="org.sagebionetworks.repo.util.ReferenceUtilImpl" />
	
	<bean id="fileHandleAssociationManager"
		class="org.sagebionetworks.repo.manager.file.FileHandleAssociationManagerImpl">
		<property name="providerMap">
			<map>
				<entry key="TableEntity">
					<bean
						class="org.sagebionetworks.repo.manager.table.TableFileHandleAssociationProvider" />
				</entry>
				<entry key="VerificationSubmission">
					<bean
						class="org.sagebionetworks.repo.manager.VerificationFileHandleAssociationProvider" />
				</entry>
				<entry key="FileEntity">
					<bean
						class="org.sagebionetworks.repo.manager.file.FileEntityFileHandleAssociationProvider" />
				</entry>
				<entry key="WikiAttachment">
					<bean
						class="org.sagebionetworks.repo.manager.wiki.WikiAttachmentFileHandleAssociationProvider" />
				</entry>
				<entry key="WikiMarkdown">
					<bean
						class="org.sagebionetworks.repo.manager.wiki.WikiMarkdownFileHandleAssociationProvider" />
				</entry>
				<entry key="UserProfileAttachment">
					<bean
						class="org.sagebionetworks.repo.manager.UserProfileFileHandleAssociationProvider" />
				</entry>
				<entry key="TeamAttachment">
					<bean
						class="org.sagebionetworks.repo.manager.team.TeamFileHandleAssociationProvider" />
				</entry>
				<entry key="SubmissionAttachment">
					<bean
						class="org.sagebionetworks.evaluation.manager.SubmissionFileHandleAssociationProvider" />
				</entry>
				<entry key="MessageAttachment">
					<bean
						class="org.sagebionetworks.repo.manager.MessageFileHandleAssociationProvider" />
				</entry>
			</map>
		</property>
	</bean>

	<bean id="authorizationManager"
		class="org.sagebionetworks.repo.manager.AuthorizationManagerImpl" />
		
	<bean id="fileHandleAuthorizationManager"
		class="org.sagebionetworks.repo.manager.file.FileHandleAuthorizationManagerImpl" />	

	<bean id="entityPermissionsManager" class="org.sagebionetworks.repo.manager.EntityPermissionsManagerImpl" />

	<bean id="userProfileManager" class="org.sagebionetworks.repo.manager.UserProfileManagerImpl" />

	<bean id="projectSettingsManager" class="org.sagebionetworks.repo.manager.ProjectSettingsManagerImpl" />

	<bean id="accessRequirementManager" class="org.sagebionetworks.repo.manager.AccessRequirementManagerImpl" />

	<bean id="accessApprovalManager" class="org.sagebionetworks.repo.manager.AccessApprovalManagerImpl" />

	<bean id="amazonClientFactory" class="org.sagebionetworks.repo.util.AmazonClientFactoryImpl"
		scope="singleton" />

	<bean id="userManager" class="org.sagebionetworks.repo.manager.UserManagerImpl" />
		
	<bean id="authManager" class="org.sagebionetworks.repo.manager.AuthenticationManagerImpl" />
	
	<bean id="amazonSESClient" class="com.amazonaws.services.simpleemail.AmazonSimpleEmailServiceClient">
        <constructor-arg ref="awsCredentials" />
    </bean>
    
	<bean id="sesClient" class="org.sagebionetworks.repo.manager.principal.SynapseEmailServiceImpl"/>
			
	<bean id="messageManager" class="org.sagebionetworks.repo.manager.MessageManagerImpl" />
	
	<bean id="backupDriver" class="org.sagebionetworks.repo.manager.backup.daemon.BackupDriverImpl" scope="singleton"/>

	<bean
        id="migrationManager"
        class="org.sagebionetworks.repo.manager.migration.MigrationManagerImpl"
        scope="singleton" >
        <property
            name="backupBatchMax"
            ref="stackConfiguration.migrationBackupBatchMax" />
        <property name="migrationListeners" >
            <list>
            </list>
        </property>
    </bean>
    
	<bean id="migrationExecutorService" class="java.util.concurrent.Executors"
		scope="singleton" factory-method="newFixedThreadPool">
		<constructor-arg value="10" />
	</bean>
	

	<bean id="stackStatusManager" class="org.sagebionetworks.repo.manager.StackStatusManagerImpl"
		scope="singleton" />

	<bean id="s3Utility" class="org.sagebionetworks.repo.manager.AmazonS3UtilityImpl"
		scope="singleton" />

	<bean id="schemaManager" class="org.sagebionetworks.repo.manager.SchemaManagerImpl"
		scope="singleton" />
		
	<bean id="evaluationManager" class="org.sagebionetworks.evaluation.manager.EvaluationManagerImpl" 
		scope="singleton" />
		
	<bean id="submissionEligibilityManager" class="org.sagebionetworks.evaluation.manager.SubmissionEligibilityManagerImpl" 
		scope="singleton" />
		
	<bean id="submissionManager" class="org.sagebionetworks.evaluation.manager.SubmissionManagerImpl" 
		scope="singleton" />

	<bean id="evaluationPermissionsManager" class="org.sagebionetworks.evaluation.manager.EvaluationPermissionsManagerImpl"
		scope="singleton" />
		
	<bean id="v2WikiManager" class="org.sagebionetworks.repo.manager.wiki.V2WikiManagerImpl" 
		scope="singleton" />

	<bean id="entityDoiManager" class="org.sagebionetworks.repo.manager.doi.EntityDoiManagerImpl" 
		scope="singleton" />

	<bean id="doiAdminManager" class="org.sagebionetworks.repo.manager.doi.DoiAdminManagerImpl" 
		scope="singleton" />

	<bean id="columnModelManager" class="org.sagebionetworks.repo.manager.table.ColumnModelManagerImpl"
		scope="singleton" />
		
	<bean id="writeReadSemaphore" class="org.sagebionetworks.database.semaphore.WriteReadSemaphoreImpl">
		<constructor-arg ref="dataSourcePool" index="0"></constructor-arg>
		<constructor-arg ref="txManager" index="1"></constructor-arg>
	</bean>
	
	<bean id="writeReadSemaphoreRunner" class="org.sagebionetworks.workers.util.semaphore.WriteReadSemaphoreRunnerImpl">
		<constructor-arg index="0" ref="writeReadSemaphore"/>
		<constructor-arg index="1"><bean class="org.sagebionetworks.common.util.ClockImpl"/>
		</constructor-arg>
	</bean>
	
	<bean id="timeoutUtils" class="org.sagebionetworks.util.TimeoutUtils"/>
		
	<bean id="tableEntityManager" class="org.sagebionetworks.repo.manager.table.TableEntityManagerImpl" scope="singleton" >
       	<property name="maxBytesPerRequest" ref="stackConfiguration.tableMaxBytesPerRequest"/>
       	<property name="maxBytesPerChangeSet" ref="stackConfiguration.tableMaxBytesPerChangeSet"/>
    </bean>
    
    <bean id="tableQueryManager" class="org.sagebionetworks.repo.manager.table.TableQueryManagerImpl" scope="singleton" >
       	<property name="maxBytesPerRequest" ref="stackConfiguration.tableMaxBytesPerRequest"/>
    </bean>
 
	<bean id="tableViewManager" class="org.sagebionetworks.repo.manager.table.TableViewManagerImpl" scope="singleton" />

	<bean id="tableSupportExecutorService" class="java.util.concurrent.Executors"
		scope="singleton" factory-method="newFixedThreadPool">
		<constructor-arg value="100" />
	</bean>
	
	<bean id="tableManagerSupport" class="org.sagebionetworks.repo.manager.table.TableManagerSupportImpl" scope="singleton" />
    
    <bean id="tableIndexConnectionFactory" class="org.sagebionetworks.repo.manager.table.TableIndexConnectionFactoryImpl" scope="singleton" >
    </bean>
    
    <bean id="asynchJobQueuePublisher" class="org.sagebionetworks.repo.manager.asynch.AsynchJobQueuePublisherImpl"
        init-method="initialize" scope="singleton" >
    </bean>
	
	<bean id="jobHashProvider" class="org.sagebionetworks.repo.manager.asynch.JobHashProviderImpl" scope="singleton" />
	
   	<bean id="asynchJobStatusManager" class="org.sagebionetworks.repo.manager.asynch.AsynchJobStatusManagerImpl" scope="singleton" />

	<bean id="subStatusAnnoAsyncManager"
		class="org.sagebionetworks.repo.model.dbo.dao.SubmissionStatusAnnotationsAsyncManagerImpl" />

	<!-- The Discussion managers -->
	<bean id="forumManager"
		class="org.sagebionetworks.repo.manager.discussion.ForumManagerImpl"
		scope ="singleton" />
	<bean id="threadManager"
		class="org.sagebionetworks.repo.manager.discussion.DiscussionThreadManagerImpl"
		scope ="singleton" />
	<bean id="replyManager"
		class="org.sagebionetworks.repo.manager.discussion.DiscussionReplyManagerImpl"
		scope ="singleton" />

	<!-- The Subscription manager -->
	<bean id="subscriptionManager"
		class="org.sagebionetworks.repo.manager.subscription.SubscriptionManagerImpl"
		scope ="singleton" />
		
	<!-- Message builder factory -->
	<bean id="replyMessageBuilderFactory"
		class="org.sagebionetworks.repo.manager.message.ReplyMessageBuilderFactory"
		scope ="singleton" />

	<bean id="threadMessageBuilderFactory"
		class="org.sagebionetworks.repo.manager.message.ThreadMessageBuilderFactory"
		scope ="singleton" />

	<bean id="dataAccessSubmissionMessageBuilderFactory"
		class="org.sagebionetworks.repo.manager.message.DataAccessSubmissionMessageBuilderFactory"
		scope ="singleton" />

	<bean id="dataAccessSubmissionStatusMessageBuilderFactory"
		class="org.sagebionetworks.repo.manager.message.DataAccessSubmissionStatusMessageBuilderFactory"
		scope ="singleton" />

	<!-- The Broadcast Message manager -->
	<bean id="broadcastMessageManager"
		class="org.sagebionetworks.repo.manager.message.BroadcastMessageManagerImpl"
		scope ="singleton">
		<property name="messageBuilderFactoryMap">
			<map>
				<entry key="THREAD">
					<ref bean="threadMessageBuilderFactory" />
				</entry>
				<entry key="REPLY">
					<ref bean="replyMessageBuilderFactory" />
				</entry>
				<entry key="DATA_ACCESS_SUBMISSION">
					<ref bean="dataAccessSubmissionMessageBuilderFactory" />
				</entry>
				<entry key="DATA_ACCESS_SUBMISSION_STATUS">
					<ref bean="dataAccessSubmissionStatusMessageBuilderFactory" />
				</entry>
			</map>
		</property>
	</bean>	
	
	<bean id="projectStatsManager"
		class="org.sagebionetworks.repo.manager.ProjectStatsManagerImpl"
		scope ="singleton" />	

	<!-- The thread pool used by the backup/restore daemons -->
	<bean id="backupDaemonThreadPool"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass">
			<value>java.util.concurrent.Executors</value>
		</property>
		<property name="targetMethod">
			<value>newFixedThreadPool</value>
		</property>
		<property name="arguments"
			ref="stackConfiguration.backupRestoreThreadPoolMaximum" />
	</bean>

	<!-- The second thread pool used by the backup/restore daemons -->
	<bean id="backupDaemonThreadPool2"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass">
			<value>java.util.concurrent.Executors</value>
		</property>
		<property name="targetMethod">
			<value>newFixedThreadPool</value>
		</property>
		<property name="arguments"
			ref="stackConfiguration.backupRestoreThreadPoolMaximum" />
	</bean>

	<bean id="backupDaemonLauncher"
		class="org.sagebionetworks.repo.manager.backup.daemon.BackupDaemonLauncherImpl"
		scope="singleton" >
	</bean>
	
	<!-- Used to read document from repo -->
	<bean id="searchDocumentDriver"
		class="org.sagebionetworks.repo.manager.search.SearchDocumentDriverImpl"
		scope="singleton" />

	<!-- Used to interface to the Jira server -->
	<bean id="jiraClient"
		class="org.sagebionetworks.repo.util.jrjc.JiraClientImpl"
		scope="singleton" />

	<bean id="teamManager" class="org.sagebionetworks.repo.manager.team.TeamManagerImpl" init-method="bootstrapTeams" scope="singleton">
	    <property name="teamsToBootstrap" ref="teamsToBootstrap"/>
    </bean>
    
	<bean id="membershipInvitationManager" class="org.sagebionetworks.repo.manager.team.MembershipInvitationManagerImpl" scope="singleton"/>
	<bean id="membershipRequestManager" class="org.sagebionetworks.repo.manager.team.MembershipRequestManagerImpl" scope="singleton" />
			
    <!-- DO NOT CHANGE ANY OF THESE NAMES OR IDS as they represent real objects in production.
        Mirror the ID for reference in code in the AuthorizationConstants.BOOTSTRAP_TEAM enum. 
     -->
    <util:list id="teamsToBootstrap">
        <bean class="org.sagebionetworks.repo.model.principal.BootstrapTeam">
            <property name="id" value="2" />
            <property name="name" value="Administrators" />
            <property name="initialMembers">
                <list>
                    <!-- the admin user -->
                    <value>1</value>
                </list>
            </property>
            </bean>
        <bean class="org.sagebionetworks.repo.model.principal.BootstrapTeam">
            <property name="id" value="464532" />
            <property name="name" value="Synapse Access and Compliance Team" />
        </bean>
        <bean class="org.sagebionetworks.repo.model.principal.BootstrapTeam">
            <property name="id" value="4" />
            <property name="name" value="Trusted Message Senders" />
            <property name="description" value="team for users who may send messages unlimited by recipient count or message frequency" />
           </bean>
       </util:list>
		
	<bean id="certifiedUserManager" class="org.sagebionetworks.repo.manager.CertifiedUserManagerImpl" scope="singleton"/>
    
	<bean id="challengeManager" class="org.sagebionetworks.repo.manager.ChallengeManagerImpl" scope="singleton"/>
    
	<bean id="verificationManager" class="org.sagebionetworks.repo.manager.VerificationManagerImpl" scope="singleton"/>
	
	<bean id="tableEntityTransactionManager"
		class="org.sagebionetworks.repo.manager.table.TableEntityTransactionManager"
		scope="singleton"/>
		
	<bean id="tableViewTransactionManager"
		class="org.sagebionetworks.repo.manager.table.TableViewTransactionManager"
		scope="singleton"/>

	<bean id="tableTransactionManagerProvider"
		class="org.sagebionetworks.repo.manager.table.TableTransactionManagerProviderImpl"
		scope="singleton">
		<property name="managerMap">
			<map>
				<entry key="table">
					<ref bean="tableEntityTransactionManager" />
				</entry>
				<entry key="entityview">
					<ref bean="tableViewTransactionManager" />
				</entry>
			</map>
		</property>
	</bean>

	<bean id="tableUploadManager"
		class="org.sagebionetworks.repo.manager.table.TableUploadManagerImpl"
		scope="singleton" />

	<bean id="researchProjectManager"
		class="org.sagebionetworks.repo.manager.dataaccess.ResearchProjectManagerImpl"
		scope="singleton" />
	<bean id="dataAccessRequestManager"
		class="org.sagebionetworks.repo.manager.dataaccess.DataAccessRequestManagerImpl"
		scope="singleton" />
	<bean id="dataAccessSubmissionManager"
		class="org.sagebionetworks.repo.manager.dataaccess.DataAccessSubmissionManagerImpl"
		scope="singleton" />
</beans>
