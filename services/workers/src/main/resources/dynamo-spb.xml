<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<aop:aspectj-autoproxy />

	<import resource="classpath:aws-spb.xml" />
	<import resource="classpath:cloudwatch-spb.xml" />
	<import resource="classpath:dynamo-dao-spb.xml" />
	<import resource="classpath:dao-beans.spb.xml" />

	<bean id="awsSQSClient"
			class="com.amazonaws.services.sqs.AmazonSQSClient"
			scope="singleton"
			depends-on="awsCredentials">
		<constructor-arg ref="awsCredentials" />
	</bean>

	<bean id="awsSNSClient"
			class="com.amazonaws.services.sns.AmazonSNSClient"
			scope="singleton"
			depends-on="awsCredentials">
		<constructor-arg ref="awsCredentials" />
	</bean>

	<bean id="dynamoMessageQueue"
			class="org.sagebionetworks.asynchronous.workers.sqs.MessageQueueImpl"
			depends-on="stackConfiguration">
		<constructor-arg index="0" ref="stackConfiguration.dynamoUpdateQueueName" />
		<constructor-arg index="1" ref="stackConfiguration.repositoryChangeTopicName" />
	</bean>

	<bean id="dynamoQueueWorkerFactory"
			class="org.sagebionetworks.dynamo.workers.sqs.DynamoQueueWorkerFactory"
			scope="singleton" />

	<bean id="dynamoQueueMessageRetriever"
			class="org.sagebionetworks.asynchronous.workers.sqs.MessageReceiverImpl"
			scope="singleton"
			depends-on="awsSQSClient">
		<property name="messageQueue" ref="dynamoMessageQueue" />
		<property name="workerFactory" ref="dynamoQueueWorkerFactory" />
		<property name="maxNumberOfWorkerThreads" value="2" />
		<property name="maxMessagePerWorker" value="5" />
		<property name="visibilityTimeoutSec" value="60" />
	</bean>

	<!-- This gate ensures we never run more than the max number or runners across the entire cluster for this worker  -->
	<bean id="dynamoIndexSemaphoreGatedRunner"
		class="org.sagebionetworks.repo.model.dbo.dao.semaphore.SemaphoreGatedRunnerImpl" scope="singleton">
		<property name="timeoutMS" ref="stackConfiguration.semaphoreGatedLockTimeoutMS" />
		<property name="maxNumberRunners" ref="stackConfiguration.semaphoreGatedMaxRunnersDynamoIndex" />
		<property name="semaphoreKey" value="dynamoIndexWorker" />		
		<property name="runner" ref="dynamoQueueMessageRetriever" />
	</bean>

	<bean id="dynamoQueueMessageRetrieverTrigger"
			class="org.springframework.scheduling.quartz.SimpleTriggerBean"
			scope="singleton">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="dynamoIndexSemaphoreGatedRunner" />
				<property name="targetMethod" value="attemptToRun" />
			</bean>
		</property>
		<!-- We stager the start delay of each trigger to spread out the timing -->
		<property name="startDelay" value="630" />
		<property name="repeatInterval" value="1013" />
	</bean>


	<bean id="dynamoRdsSynchronizer"
			class="org.sagebionetworks.dynamo.workers.DynamoRdsSynchronizer"
			scope="singleton">
		<constructor-arg index="0" ref="nodeDao" />
		<constructor-arg index="1" ref="nodeTreeQueryDao" />
		<constructor-arg index="2" ref="nodeTreeUpdateManager" />
	</bean>

	<bean id="dynamoRdsSynchronizerSemaphoreGatedRunner"
		class="org.sagebionetworks.repo.model.dbo.dao.semaphore.SemaphoreGatedRunnerImpl" scope="singleton">
		<property name="timeoutMS" ref="stackConfiguration.semaphoreGatedLockTimeoutMS" />
		<property name="maxNumberRunners" ref="stackConfiguration.semaphoreGatedMaxRunnersDynamoSynchronize" />
		<property name="semaphoreKey" value="dynamoRdsSynchronizerWorker" />		
		<property name="runner" ref="dynamoRdsSynchronizer" />
	</bean>

	<bean id="dynamoRdsSynchronizerTrigger"
			class="org.springframework.scheduling.quartz.SimpleTriggerBean"
			scope="singleton">
		<property name="jobDetail">
			<bean class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
				<property name="targetObject" ref="dynamoRdsSynchronizerSemaphoreGatedRunner" />
				<property name="targetMethod" value="attemptToRun" />
			</bean>
		</property>
		<!-- We stager the start delay of each trigger to spread out the timing -->
		<property name="startDelay" value="1234" />
		<property name="repeatInterval" value="30000" />
	</bean>

</beans>
