# Any passwords and credentials in this file should be encrypted

# All default properties for stack "dev" instance "${org.sagebionetworks.developer}" belong in this file

#---- Endpoint configuration
org.sagebionetworks.authenticationservice.privateendpoint=${org.sagebionetworks.base.endpoint}/auth/v1
org.sagebionetworks.authenticationservice.publicendpoint=${org.sagebionetworks.base.endpoint}/auth/v1
org.sagebionetworks.repositoryservice.endpoint=${org.sagebionetworks.base.endpoint}/repo/v1
org.sagebionetworks.fileservice.endpoint=${org.sagebionetworks.base.endpoint}/file/v1
org.sagebionetworks.searchservice.endpoint=${org.sagebionetworks.base.endpoint}
org.sagebionetworks.docker.endpoint=${org.sagebionetworks.base.endpoint}/docker/v1
org.sagebionetworks.docker.registry.listener.endpoint=${org.sagebionetworks.base.endpoint}/dockerRegistryListener/v1

#--- The main MySQL database connection.
org.sagebionetworks.repository.database.connection.url=jdbc:mysql://localhost/dev${org.sagebionetworks.developer}?allowPublicKeyRetrieval=true&useSSL=false
org.sagebionetworks.repository.database.username=dev${org.sagebionetworks.developer}
org.sagebionetworks.repository.database.password=platform

#--- The database information used to create ids.
org.sagebionetworks.id.generator.database.connection.url=jdbc:mysql://localhost/dev${org.sagebionetworks.developer}?allowPublicKeyRetrieval=true&useSSL=false
org.sagebionetworks.id.generator.database.username=dev${org.sagebionetworks.developer}
org.sagebionetworks.id.generator.database.password=platform

#---- S3 configuration

# This is the bucket for Synapse data
org.sagebionetworks.s3.readAccessExpiryHours=24
org.sagebionetworks.s3.writeAccessExpiryHours=24
# This is for attachment URLs that expire in 10 seconds.
org.sagebionetworks.s3.readAccessExpirySeconds=20
org.sagebionetworks.s3.bucket=devdata.sagebase.org

# This is the shared bucket for all backup files.
org.sagebionetworks.shared.s3.backup.bucket=.backups.sagebase.org

#The amount of time (MS) the ChangeSentMessageSynchWorker sleeps between pages.
org.sagebionetworks.worker.change.synch.sleep.ms=2000
# The minium page size used by ChangeSentMessageSynchWorker. (25K)
org.sagebionetworks.worker.change.synch.min.page.size=25000

org.sagebionetworks.id.generator.database.driver=com.mysql.cj.jdbc.Driver
org.sagebionetworks.repository.databaes.driver=com.mysql.cj.jdbc.Driver
org.sagebionetworks.table.databaes.driver=com.mysql.cj.jdbc.Driver

# The repository database connection pool properties.
org.sagebionetworks.pool.connection.validate=true
# This is the SQL that will be used to determine if a connection is alive.
org.sagebionetworks.pool.connection.validate.sql=SELECT 1
# The minimum number of connections maintained by the connection pool.
org.sagebionetworks.pool.min.number.connections=2
# The maximum number of connections the connection pool will created
org.sagebionetworks.pool.max.number.connections=40

# The repository Apache HttpClient connection pool properties
org.sagebionetworks.httpclient.connectionpool.maxconnsperroute=20

# Used in conjunction with the API key below to login as the migration admin user
org.sagebionetworks.migration.admin.username=migrationAdmin@sagebase.org
# Note: This API key should be changed in before bootstrapping the migration admin in production systems
org.sagebionetworks.migration.admin.apikey=fake

# ID and Key used for Google OAuth2.0. Valid values from the google developer console are required for this feature to work.
org.sagebionetworks.oauth2.google.client.id=fake
org.sagebionetworks.oauth2.google.client.secret=fakeKey

# ID and Key used for ORCID OAuth2.0. Valid values from the orcid.org site are required for this feature to work.
org.sagebionetworks.oauth2.orcid.client.id=fake
org.sagebionetworks.oauth2.orcid.client.secret=fakekey

# Email address used to send notifications
org.sagebionetworks.notification.email.suffix=@synapse.org

# URL prefix of Synapse web page for notification update
org.sagebionetworks.notification.portal.endpoint=https://www.synapse.org/#!SignedToken:Settings/

# URL of Synapse web page for user profile setting
org.sagebionetworks.profile.setting.portal.endpoint=https://www.synapse.org/#!Profile:edit

# Email address used to send to Synapse Ops team
org.sagebionetworks.synapseops.email.address=synapse-ops@sagebase.org

# Activity Logger
org.sagebionetworks.usage.metrics.logging.enabled=true

# Whether log sweeping should be enabled
org.sagebionetworks.logging.sweeper.enabled=true
org.sagebionetworks.logging.sweeper.delete.enabled=true

#AmazonWebServices CloudWatch Profiler 
org.sagebionetworks.cloud.watch.report.enabled=true

#AmazonWebServices CloudWatch Profiler's Trigger time in milliseconds
org.sagebionetworks.cloud.watch.trigger=60000

#Call Performance Profiler 
org.sagebionetworks.call.performance.report.enabled=true

#Calll Performance Profiler's Trigger time in milliseconds
org.sagebionetworks.call.performance.trigger=60000

# The maximum number of threads used by the backup/restore daemon thread pool.
# Set this to an even number since two threads are used for each daemon.
org.sagebionetworks.backup.restore.thread.pool.maximum=10

# The maximum number of bytes allowed for a query result.  Currently set to 500 KB.
org.sagebionetworks.maximum.bytes.per.query.result=512000

# The maximum number entities returned in a single call
org.sagebionetworks.maximum.number.entities.returned.per.call=20

# This is a size limit on a single entity.
# Note: The number can never be decreased, so increase with care.
org.sagebionetworks.maximum.number.bytes.per.entity=1024000

# The maximum number of pixels used for a preview image
org.sagebionetworks.preview.image.max.width.pixels=1024
org.sagebionetworks.preview.image.max.height.pixels=768
org.sagebionetworks.attachment.preview.image.max.pixels=150

# AWS Simple work flow settings:
org.sagebionetworks.swf.workflowExecutionRetentionPeriodInDays=1

org.sagebionetworks.repo.manager.jira.user.email=synapse-jira-service@synapse.org
org.sagebionetworks.repo.manager.jira.user.apikey=fake

# The percentage of the maximum memory that can be used for file transfer.
# Note: transfer% + preview% cannot exceed 90%
org.sagebionetworks.repo.manager.file.transfer.memory.percent.of.max=0.70
# The percentage of the maximum memory that can be used for preview generation.
# Note: transfer% + preview% cannot exceed 0.90 (90%)
org.sagebionetworks.repo.manager.file.preview.memory.percent.of.max=0.20
# This is the size of a single file transfer memory block used as a buffer. 
# Note: Due to S3 limitations on the minimum size of a single part of a multi-part upload
# this value cannot be less 5 MB.  It is currently set to 5 MB.
org.sagebionetworks.repo.manager.file.transfer.memory.buffer.bytes=5242880
# The maximum number of worker threads used to generate preview files.
org.sagebionetworks.file.preview.max.number.worker.threads=10

# Should messages be published to the AWS topic?
org.sagebionetworks.repo.manage.shouldMessagesBePublishedToTopic=true

#--- DOI Minting Service Credentials and Parameters ---
org.sagebionetworks.doi.prefix=10.5072
org.sagebionetworks.doi.datacite.username=apitest
org.sagebionetworks.doi.datacite.password=apitest
org.sagebionetworks.doi.datacite.api.endpoint=mds.datacite.org

# Backup batch size See PLFM-1896
org.sagebionetworks.repo.manager.migration.backup.batch.max=500

# This should match the Database max_allowed_packet value. See PLFM-1900
org.sagebionetworks.repo.model.dbo.migration.max.allowed.packet.byte = 1048576

# Enable the CloudSearch features
org.sagebionetworks.search.enabled=false

# Enable DOI related features
org.sagebionetworks.doi.enabled=false
org.sagebionetworks.doi.datacite.enabled=false

# Enable Google Cloud features
org.sagebionetworks.google.cloud.enabled=false
# A Base64-encoded JSON key used to authenticate a service account with Google Cloud
org.sagebionetworks.google.cloud.key=ewogICJ0eXBlIjogInNlcnZpY2VfYWNjb3VudCIsCiAgInByb2plY3RfaWQiOiAicHJvamVjdC1pZC0xMjM0NTYiLAogICJwcml2YXRlX2tleV9pZCI6ICJjY2E3NDhiNmM1YzUwNmU2ZDhjNGIzN2MyMmFmMDQzMWZkM2EzOWY5IiwKICAicHJpdmF0ZV9rZXkiOiAiLS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tXG5NSUlFdndJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLa3dnZ1NsQWdFQUFvSUJBUUM1dWI4NGtSNVR4amgyXG5Xam5zSlhEUmEzM2JJYXhQdjVmQ3ZpZFFYSzR6RTEyS1lYVFN0N0RFaTJHNE4vRVdjNkpuZCt2TXIrWCtkNzMvXG5HYzU4QkJ5MHlLK0ROeTVzZDNCcHAyNkRZYzNEZWNrK0lOaXc1UkE0cWJGTGROS1hobUUwTCswdWgrWWFHSzF1XG5uUkM5Ym9HdWRRaVRKVUJvNGY4eWZwbTI3dWNvclpvUEF3My85eG02eTgvb05CcStnN3V6VS9lclR6WGR1dXdDXG5YOXUyY3NncHZhMFlLMm9aV3JLenNPMXJ3Qk9TeWV2TkUwT3RjNG5nai9FVUhnbzArdzg0T1VrSVk1WVdYRnZUXG5ycGR1bGNTYStRKzFnVWo3UnRaQ3NhSGJwSUI4RnRwMXhEYzYwWW80aC93blk0RmpJa243SjV2NWV6aFJFK29oXG53a0ppUHNaQkFnTUJBQUVDZ2dFQkFJMWhjY2g4NkFvN3pjV0NuNjg5UFNtZVd6dFI0ZHIvYldhSTNHS1hldUJVXG5zSk5qNXN0MW0vR3liTndRY2MxMmp6MldrNERJc2h0SlNmQUUxQ09oK2J4QlBTSjFBamo5bnl3K2tha2Y3Y1FOXG5WSDJnQVhSL214NlhSdWk2OElqNmVjcUJaVnRUaG4xOUphRWJuWittbkwrU1JjbkZ4TWRTcXJMa250MGI5Z29HXG4rQ2JrWS85UkhDQThCZXNsbVVLOGJMQWtZdWljU3JzSmw4OEdrU1E3Wjc0K3BkWVhVRGx1QStyejFuRFlLVFJTXG5ONXFHVEdFaWcrNjF2NVFNUitDSzI3YjFyREwvT1VGaEZ4ajRhaU1CMW9LR1I4UXNTdjVSQ0tsanV2TXRkcEMrXG5qUjJQM0hFbWtXeFdWM2gxNXlVcHVUbDdBczkrS3JVRENhNVRGbTBQT3dFQ2dZRUE3U0lOT21oL29GMXAxbkQ2XG4yc2d0S1o0WWxTdVRTOWV3eFlFY0c5WDJib1Q0NjN3VW9YSXNRRktoMENZZFRRRFhqNDIvTmpiNThlOGZoaXVoXG5CM3JkaVVTaVlEUmVDa2dnZzZIV3lUc1EyOWR3VFo3bjJaRktSc1NoZVVWWXZ4YTJzTFJZK0Z1TUZpbXErRUZUXG5IcGVscGhvTEtUZkV2dU1mRk1uK2dvVCt2WEVDZ1lFQXlJQ2ZuL1lLOXFGclNETnZiMjBJdEdpMjFlVEtaMGpJXG5NVG56cHh2VDFkeHI4Ull4NER6OXZqTmtFcUdTYUFHZnlVK3hYaENCSnRkSk81cFgxRGVNWlZwTUpQQmtGZWlsXG4vWExEUWtMS1V2VEN2eHdZUXdlTHVma2FBNkxzRWx1bis1Zk1YMS9UK0R6eHh4K2RvOGRLUWhiZ2EzVVBaOHdSXG5RZnBJT2xidGJkRUNnWUVBcEdiRFBRZE4xR1J2Q0JqMEVkSk9YVmdhT3ZFbkFhSGNFRkhlcHYzRUNBTndmL0phXG5hME80b2krbnQ2TjFGUG5NZU40US93bEdhQkVjamV5Wmk1SUhIUy9VVTFaN0RDM05QUFZxNzhCZmc4cnROU05DXG5JbmkwUWpQNHJ4Y0EzQnBuTmtNU203ejhkakVWTTJBMnZETHV5U1d0THpwVzBQQ3RqOEFyRDFvZE1rRUNnWUJGXG41cEcvOHNkZnRHYnloUHdVbks2c050V0hQSHhVQmN2RlhhN1VVNTlHcjlIeCt3cm9ZbHNVTkZadktHVWlYVzZYXG5nSEVWbWl0c255R281ZVk0MWlUY01ON2JBZlBpcjNrdkl4TnZ4bGxERXBIU2pyam1wWHJSRzBjMmZWWlFFQ1JBXG5VbXV0MUhyUjBHMTZQa3QzRGNPVnh1UDJrcGtNVnRpdFo5Ukdnb2ZFQVFLQmdRQ3owVS9nNVg5eUgyR3JmZ0FHXG5RK2Q3TUtIM1Z6MWViVjVtc01wRTAycFM5SldiSFJMU1d4cTJGYmlGOGg2YjNEalMzaURzYVVReG5pZitscDNsXG5nc25lR0tpemd5L2orZ0RLa0I3VEM4YkV1bVIxN245Ymw4SXJ5T1AwYXc4MjA5blpIc09VbjN1RmN2STVXOUpQXG53bDd0NUh6RlZEbXZ0VEZndjR4NCswL01MQT09XG4tLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tIiwKICAiY2xpZW50X2VtYWlsIjogImp1bmtlbWFpbEBwcm9qZWN0LWlkLTEyMzQ1Ni5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIsCiAgImNsaWVudF9pZCI6ICIzOTUzOTg1MjA5MzUzMjA5NTgzMjUiLAogICJhdXRoX3VyaSI6ICJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20vby9vYXV0aDIvYXV0aCIsCiAgInRva2VuX3VyaSI6ICJodHRwczovL29hdXRoMi5nb29nbGVhcGlzLmNvbS90b2tlbiIsCiAgImF1dGhfcHJvdmlkZXJfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHMiLAogICJjbGllbnRfeDUwOV9jZXJ0X3VybCI6ICJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9yb2JvdC92MS9tZXRhZGF0YS94NTA5L2p1bmtlbWFpbCVwcm9qZWN0LWlkLTEyMzQ1Ni5pYW0uZ3NlcnZpY2VhY2NvdW50LmNvbSIKfQ

# The maximum number of bytes per HTTP table request.  Currently set to 2 MB which matches
# Tomcat's max bytes per POST
org.sagebionetworks.table.max.bytes.per.request=2097152
# The maximum number of bytes in a single table change set file.  Currently set to 5 MB.
org.sagebionetworks.table.max.bytes.per.change.set=5242880
# The maximum number of possible enum values for one column.
org.sagebionetworks.table.max.enum.values=100

# The number of database in the tables cluster.  Each database must have an org.sagebionetworks.table.cluster.endpoint.<index> & org.sagebionetworks.table.cluster.schema.<index>
org.sagebionetworks.table.cluster.database.count=1
# For each database there must be an endpoint property (org.sagebionetworks.table.cluster.endpoint.<index>) where index = 0 - n-1
org.sagebionetworks.table.cluster.endpoint.0=localhost
# For each database there must be an schema property (org.sagebionetworks.table.cluster.schema.<index>) where index = 0 - n-1
org.sagebionetworks.table.cluster.schema.0=dev${org.sagebionetworks.developer}tables
# Should a SSL connection be used to the table's database?  Default to false.
org.sagebionetworks.table.cluster.use.ssl=false;

# The maximum amount of time in MS that the table worker can hold the semaphore lock on the table.

# Note: If this is set too short the lock could be released while the table is still being updated.
org.sagebionetworks.table.worker.timeout.ms= 3600000
# The timeout for querying a table. Currently set to 15 seconds.
org.sagebionetworks.table.read.timeout.ms=15000

# Configuration properties for the Semaphore gated runner.

# When a lock is acquired from the semaphore a timeout must be provided
# If the lock is not released before the timeout expires, the lock will be forfeit
# and another runner will be able to acquire the lock. This is currently set to
# 30 minutes to allow plenty of time for the works to finish their work.
# Setting this too low will undermine the gating.
org.sagebionetworks.semaphore.gated.lock.timeout.ms=1800000
# The maximum number of worker in the cluster that will process Annotations data
org.sagebionetworks.semaphore.gated.max.runners.annotations=1
# The maximum number of workers in the cluster that will pop Table update messages from SQS
org.sagebionetworks.semaphore.gated.max.runners.table.cluster=10

#The maximum number of reader locks allowed at once for WriteReadSemaphoreRunner
org.sagebionetworks.write.read.semaphore.runner.max.readers=4

# The maximum timeout for an exclusive lock in milliseconds. Set to one hour.
org.sagebionetworks.semaphore.exclusive.max.timeout.ms=3600000

# The maximum timeout for a shared lock in milliseconds. Set to 2 mins.
org.sagebionetworks.semaphore.shared.max.timeout.ms=120000

#The maximum amount of time the multipart upload daemons are allowed to take before timing out.
org.sagebionetworks.repo.manager.file.multipart.upload.daemon.timeout.ms=300000
# The maximum number of threads that can be used for the mutipart upload daemons.
org.sagebionetworks.repo.manager.file.multipart.upload.daemon.main.max.threads=20
# The maximum number of threads that can be used for the mutipart upload daemons copy part sub-task.
org.sagebionetworks.repo.manager.file.multipart.upload.daemon.copy.part.max.threads=50

org.sagebionetworks.repo.model.bootstrap.root.folder.entity.path=/root
org.sagebionetworks.repo.model.bootstrap.root.folder.entity.id=4489
org.sagebionetworks.repo.model.bootstrap.trash.folder.entity.path=/root/trash
org.sagebionetworks.repo.model.bootstrap.trash.folder.entity.id=1681355

# The maximum number of concurrent connections on repo for one synapse user over the cluster
org.sagebionetworks.max.concurrent.repo.connections=10

# Set to true to re-enable the creation of old entity types.
org.sagebionetworks.allow.create.old.entities=false
# Set to true to re-enable the creation of old attachments.
org.sagebionetworks.allow.create.old.attachments=false
# The maximum number of entities per container.
org.sagebionetworks.synapse.max.entities.per.container=10000

# ECDSA private key / certificate pairs
#
# These credentials are used only in dev/test, never in production
# Further, they are for signing JWT tokens *only* and never,
# say, as TLS security.
#
# The private key was generated by:
# openssl ecparam -name secp256r1 -genkey | openssl pkcs8 -topk8 -inform PEM -outform PEM -nocrypt > privatekey.pem
# The private key values in this file are not encrypted and differ from the encrypted values passed to production. 
#
# To generate a self-signed certificate for the private key
# openssl req -new -x509 -key privatekey.pem -out cert.pem -days 36500
# For 'common name' use 'www.synapse.org'
# Note, the certificates are NOT further encrypted here
org.sagebionetworks.docker.authorization.private.key=\
MIGHAgEAMBMGByqGSM49AgEGCCqGSM49AwEHBG0wawIBAQQg38HpyCOGkOiq2iJB\
C7uEN8wWv/NV0jYF/ihpQJ4ng36hRANCAAQ5e3PRzLYweP78cDPDwPMc6XhuTaKg\
KtmDEsqS13DmBXt8c65rt3owdJ7JCxHJYxON91Eg9sBQhT2K8yyOf+PB
org.sagebionetworks.docker.authorization.certificate=\
MIIC+zCCAqGgAwIBAgIJAI+Kok0VfNbJMAkGByqGSM49BAEwgYgxCzAJBgNVBAYT\
AlVTMQswCQYDVQQIEwJXQTEQMA4GA1UEBxMHU2VhdHRsZTENMAsGA1UEChMEU2Fn\
ZTELMAkGA1UECxMCUEwxGDAWBgNVBAMTD3d3dy5zeW5hcHNlLm9yZzEkMCIGCSqG\
SIb3DQEJARYVcGxhdGZvcm1Ac2FnZWJhc2Uub3JnMCAXDTE2MDYxMjE2NTU0M1oY\
DzIxMTYwNTE5MTY1NTQzWjCBiDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAldBMRAw\
DgYDVQQHEwdTZWF0dGxlMQ0wCwYDVQQKEwRTYWdlMQswCQYDVQQLEwJQTDEYMBYG\
A1UEAxMPd3d3LnN5bmFwc2Uub3JnMSQwIgYJKoZIhvcNAQkBFhVwbGF0Zm9ybUBz\
YWdlYmFzZS5vcmcwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQ5e3PRzLYweP78\
cDPDwPMc6XhuTaKgKtmDEsqS13DmBXt8c65rt3owdJ7JCxHJYxON91Eg9sBQhT2K\
8yyOf+PBo4HwMIHtMB0GA1UdDgQWBBQXzi7VyAjmc2nucRtLQaAkGL7RWTCBvQYD\
VR0jBIG1MIGygBQXzi7VyAjmc2nucRtLQaAkGL7RWaGBjqSBizCBiDELMAkGA1UE\
BhMCVVMxCzAJBgNVBAgTAldBMRAwDgYDVQQHEwdTZWF0dGxlMQ0wCwYDVQQKEwRT\
YWdlMQswCQYDVQQLEwJQTDEYMBYGA1UEAxMPd3d3LnN5bmFwc2Uub3JnMSQwIgYJ\
KoZIhvcNAQkBFhVwbGF0Zm9ybUBzYWdlYmFzZS5vcmeCCQCPiqJNFXzWyTAMBgNV\
HRMEBTADAQH/MAkGByqGSM49BAEDSQAwRgIhAI5mLcT6D++3oTbjdNhKs6SI3ijO\
mKf6Xe++KzE8JJknAiEAq17eb0ZG0Eh/3hKk+9FREUAZ2iub3HPjwD3QPA+bL1c=

# RSA is the standard for OpenID Connect: https://openid.net/specs/openid-connect-core-1_0.html#ServerMTI
#
# The following was geneated by:
# openssl genpkey -aes256 -algorithm RSA -pkeyopt rsa_keygen_bits:2048 -out private-key.pem
# openssl pkey -in private-key.pem -text
# The keys in this file are for development/testing only and should never be used in production.
#
# Generally the following is a comma-separated list of pem-encoded private keys
org.sagebionetworks.oidc.signature.rsa.private.keys=\
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDinbEq1zwFsfSA\
FCajV9qrk2Qok9EiF/jlp/bRknCMEgj8j5oYiDxmnFXvnrSHJVk1NUOo4ON8m3WR\
MCLpN7t0ygIKvx30L7xdVlnvoldv/lYx87KqGEVadEnl/lGEaGRxpdXkiwgJem9l\
Ht7V8TquJiIcqQviwCc1ZKjtKtSbZtcpA0MxT/YNATf7GBWWD5KH39qL6/hHrCIa\
BYCqbNQt594/UZEgxRfB6sKyb2744Jshiq41Y25TJc4gNUq69EBMkaQrC9V67as6\
TJG2GJhfmAPsXgr7Lbyk5/kTsC8YXAasAzZnpA+ljLNv6pIdpyizx9XNrz13DFrY\
RK8lbHkrAgMBAAECggEANIuT9PcLN9bXdos1mlJYpcf7RV1g9KLSV43msRlfd1sH\
Mmiptl6AgtplIraN7Xg/gxLiqVnb5Zy2Wf/rWGBP2visGInQDDq1Vn8bQ3FFDPbQ\
TazQFJikHCEysV2S0TzTbXaibee+6VO2WKAb00en75Fv/21DEES10q+Qa82ulomG\
THIy7RitkdhkKPv16Lz7EQFcrdbZieldppijm15EK+wAKl8TAShIyZaAC8QY61F1\
hqqLApigI1GL7knP4jnii6sF7ykEpHb5huf3RI18DGwtUZOWLqimHgvmfn3p5NLT\
d/Xo56SOazhTBlvkNlUQccIQDzA8M2pjLcxxnMLcoQKBgQD0eRY63R3ZJh72OLCm\
C1iRS8NnQmdC+iR3zw7J5jvOkHSDctI1Zf6X+D4iyPLr1+tjnLy5YgTDP9PUJi9h\
3FRbnGkPD7I5q+19cvV5bQvxn36+kKZunfgLQYYe1Zk/6BbItOli5fzyQK3QTSp8\
eIKdQ02VQiFNV4UESbrb00UWNQKBgQDtTQ/hun6eYCVW9n3TmTi5+WRBb1R4X3kd\
/tifYhzy2Eab2pgQ3BN9INENlBsPb8J1+86rWwY2KVO9vHhctK47ytEn1kv//KCo\
ugo870dEZuAqX9ACNtG/Ba52IkCSjcpTJRo3R3lTLASV7vLZs4q5AyKNWCJD49kr\
KC9nNpW93wKBgQDRkYtQ4oPXxin8gBROAqPlycC0H+RNMglY+xJ+WPMj3AlFNYSl\
ac2ZkKATSZeUPP/34ECX2kKi7XA1CJbNmQZnkektlBMABTYMuCNd9/CpLESGL5G8\
eYZMf9rtS8WXVulRHGSE9wqi0HcvfTbShKvTDALR1GKf3kqUpm+cSbuLkQKBgCfS\
hNXGrDT7wYhkeR0nW2OqPG7WtgA1VWf5OnUUy/Lc5IyHFHnP1N1swmha8GeYw7N0\
/Gu5LMOuD8WJeVFlaM/T62GaDsr4pCVsgwdSyEzsTrYNuiSE+pHp7Csa+GcfsFJf\
qZSZQ/z3KBXZMZvjC2ac5hF+NtHZzLn3Vm0ltd9VAoGBAJcs9PBjJ9XqAHo6x88g\
7KxK1mfXRrVoxMLZD2njx4xWTK6OWOAECdWBIPbsstT57BVUeSa5wAVy/SkgfZ3E\
MjjcxwFQoYuOR/cgYAFyXY/jMXb6kKSdc02437hTXjTotvkgAJfO7gxVy8s3ipI7\
pzvMOgD+6P3bCeoBuyKg2xhY

# comma-separated list of registries supported by synapse
# format is host[:port], where port is optional and there is
# no protocol
org.sagebionetworks.docker.registry.hostnames=docker.synapse.org, docker-staging.dev.sagebase.org

# The authorization endpoint that Synapse OAuth 2.0 clients will redirect 
# the browser to, to prompt the user to authorize that client
org.sagebionetworks.oauth.authorization.endpoint=http://localhost:8080/authorize

# comma-separated list of host name regular expressions which 
# are reserved for future hosted docker registries
org.sagebionetworks.docker.reserved.hostnames=\\.synapse\\.org$

# markdown service endpoint
org.sagebionetworks.markdown.service.endpoint=https://markdownit2.prod.sagebase.org
# Synapse base URL
org.sagebionetworks.synapse.base.url=https://www.synapse.org/
# Version zero signing key
org.sagebionetworks.hmac.signing.key.version.0=fake
# The current version of the signing token
org.sagebionetworks.hmac.signing.key.current.version=0

# The maximum number of months to process for monthly statistics
org.sagebionetworks.statistics.monthly.max=12

# key/secret pair for docker registry
org.sagebionetworks.docker.registry.auth.key=user
org.sagebionetworks.docker.registry.auth.secret=pass

# key/secret pair for cloud mail-in
org.sagebionetworks.cloudmailin.auth.key=user
org.sagebionetworks.cloudmailin.auth.secret=pass

# key/secret pair for admin/migration services auth
org.sagebionetworks.admin.auth.key=admin
org.sagebionetworks.admin.auth.secret=admin

# The configured endpoint for prod, used to detect if the current stack is prod vs staging
org.sagebionetworks.repositoryservice.endpoint.prod=https://repo-prod.prod.sagebase.org/repo/v1

