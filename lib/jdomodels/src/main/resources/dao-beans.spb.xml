<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- Turn on Spring's autoproxy using AspectJ's @Aspect annotations. -->
	<aop:aspectj-autoproxy />

	<!-- Import the stack configuration -->
	<import resource="dbo-beans.spb.xml" />
	<import resource="bootstrap-entites-spb.xml" />
	
	<!-- Depends on ID-generator. -->
	<import resource="id-generator.spb.xml" />
	
	<bean id="transactionSynchronizationManager" class="org.sagebionetworks.repo.model.message.TransactionSynchronizationProxyImpl"/>
	<!-- Transactional Messenger -->
	<bean id="transactionalMessenger" class="org.sagebionetworks.repo.model.message.TransactionalMessengerImpl"/>
	
	<bean id="tagMessenger" class="org.sagebionetworks.repo.model.dbo.dao.TagMessengerImpl"/>
	
	<bean id="dboAnnotationsDao" class="org.sagebionetworks.repo.model.dbo.dao.DBOAnnotationsDaoImpl"/>
	
	<bean id="referenceDao" class="org.sagebionetworks.repo.model.dbo.dao.DBOReferenceDaoImpl"/>
	<bean id="dboReferenceDao" class="org.sagebionetworks.repo.model.dbo.dao.DBOReferenceDaoImpl"/>

	<bean id="nodeDao" class="org.sagebionetworks.repo.model.dbo.dao.NodeDAOImpl"
		depends-on="idGenerator" />

	<alias name="nodeDao" alias="nodeBackupDao"/>

	<bean id="activityDao" class="org.sagebionetworks.repo.model.dbo.dao.DBOActivityDAOImpl" depends-on="idGenerator"/>

	<!-- Controls how nodes inherit their permissions -->
	<bean id="nodeInheritanceDao"
		class="org.sagebionetworks.repo.model.jdo.JDONodeInheritanceDAOImpl" />

	<bean id="userGroupDAO" class="org.sagebionetworks.repo.model.dbo.dao.DBOUserGroupDAOImpl" />

	<bean id="userProfileDAO" class="org.sagebionetworks.repo.model.dbo.dao.DBOUserProfileDAOImpl" />

	<bean id="accessRequirementDAO" class="org.sagebionetworks.repo.model.dbo.dao.DBOAccessRequirementDAOImpl" />

	<bean id="accessApprovalDAO" class="org.sagebionetworks.repo.model.dbo.dao.DBOAccessApprovalDAOImpl" />

	<bean id="userGroupCache" class="org.sagebionetworks.repo.model.jdo.UserGroupCacheImpl"
		scope="singleton" />

	<bean id="dboAccessControlListDao"
		class="org.sagebionetworks.repo.model.dbo.dao.DBOAccessControlListDaoImpl"
		scope="singleton" />
		
	<bean id="accessControlListDAO"
		class="org.sagebionetworks.repo.model.jdo.JDOAccessControlListDAOImpl"
		scope="singleton" />

	<bean id="accessKey" class="org.sagebionetworks.StackConfiguration" factory-method="getIAMUserId"/>
	<bean id="secretKey" class="org.sagebionetworks.StackConfiguration" factory-method="getIAMUserKey"/>
	<bean id="awsCredentials" class="com.amazonaws.auth.BasicAWSCredentials">
		<constructor-arg index="0" ref="accessKey" />
		<constructor-arg index="1" ref="secretKey" />
	</bean>
	<bean id="amazonS3Client" class="com.amazonaws.services.s3.AmazonS3Client" scope="singleton">
		<constructor-arg ref="awsCredentials" />
	</bean>
	<bean id="storageLocationDAO"
			class="org.sagebionetworks.repo.model.dbo.dao.StorageLocationDAOImpl"
			scope="singleton">
	</bean>

	<bean id="changeDAO"
			class="org.sagebionetworks.repo.model.dbo.dao.DBOChangeDAOImpl"
			scope="singleton">
	</bean>

	<bean id="entityBootstrapper"
		class="org.sagebionetworks.repo.model.bootstrap.EntityBootstrapperImpl">
		<property name="bootstrapEntities">
			<list>
				<ref bean="rootFolderBootstrapData" />
				<!-- ref bean="agreementFolderBootstrapData" /-->
				<!-- ref bean="eulaFolderBootstrapData" /-->
			</list>
		</property>
	</bean>
	
		<!-- The alias cache singleton -->
	<bean id="alaisCache"
		class="org.sagebionetworks.repo.model.query.jdo.NodeAliasCacheImpl"
		depends-on="entityBootstrapper" />

	<!-- The node query dao singleton -->
	<bean id="nodeQueryDao"
		class="org.sagebionetworks.repo.model.query.jdo.JDONodeQueryDaoImpl"
		depends-on="entityBootstrapper" />

	<bean id="backupRestoreStatusDao"
		class="org.sagebionetworks.repo.model.jdo.BackupRestoreStatusDAOImpl" scope="singleton"/>
		
	<bean id="stackStatusDao"
		class="org.sagebionetworks.repo.model.jdo.StackStatusDaoImpl" scope="singleton"/>
	
	<!-- DAO used by asynchronous RDS works to update RDS tables acting as indicies -->
	<bean id="asynchronousDAO" class="org.sagebionetworks.repo.model.dbo.dao.AsynchronousDAOImpl" />

	<bean id="competitionDao" class="org.sagebionetworks.competition.dao.CompetitionDAOImpl"
		depends-on="idGenerator" />
	<bean id="participantDao" class="org.sagebionetworks.competition.dao.ParticipantDAOImpl" />
	<bean id="submissionDao" class="org.sagebionetworks.competition.dao.SubmissionDAOImpl"
		depends-on="idGenerator" />

</beans>