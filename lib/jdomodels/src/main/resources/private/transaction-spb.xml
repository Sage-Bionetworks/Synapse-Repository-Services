<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd">

	<!-- Trun on Spring's auotproxy using AspectJ's @Aspect annotations. -->
	<aop:aspectj-autoproxy />
		
	<!-- The default behavior of Spring is to only roll-back on RuntimeExceptions 
		not Exceptions. In the past that is has caused us to commit on IOException 
		and InterruptedException See PLFM-2108. This advice 
		will ensure that we rollback for all exceptions -->
	<tx:advice id="defaultWriteTxRollbackAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Throwable" isolation="READ_COMMITTED" />
		</tx:attributes>
	</tx:advice>
	<tx:advice id="defaultNewWriteTxRollbackAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRES_NEW" rollback-for="Throwable" isolation="READ_COMMITTED" />
		</tx:attributes>
	</tx:advice>
	<tx:advice id="defaultMandatoryWriteTxRollbackAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*" propagation="MANDATORY" rollback-for="Throwable" isolation="READ_COMMITTED" />
		</tx:attributes>
	</tx:advice>
	<tx:advice id="migrationWriteTxRollbackAdvice" transaction-manager="migrationTxManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Throwable" isolation="READ_COMMITTED" />
		</tx:attributes>
	</tx:advice>

	<!-- These advisor will be applied to any method with the @WriteTransaction, @NewWriteTransaction and 
		@MandatoryWriteTransaction annotations. This allows us to change the default rollback exception types 
		for all of our transactional methods -->
	<aop:config>
		<aop:pointcut id="defaultWrites"
			expression="@annotation(org.sagebionetworks.repo.transactions.WriteTransaction)" />
		<aop:advisor pointcut-ref="defaultWrites" advice-ref="defaultWriteTxRollbackAdvice" />
	</aop:config>		
	<aop:config>
		<aop:pointcut id="defaultNewWrites"
			expression="@annotation(org.sagebionetworks.repo.transactions.NewWriteTransaction)" />
		<aop:advisor pointcut-ref="defaultNewWrites" advice-ref="defaultNewWriteTxRollbackAdvice" />
	</aop:config>
	<aop:config>
		<aop:pointcut id="defaultMandatoryWrites"
					  expression="@annotation(org.sagebionetworks.repo.transactions.MandatoryWriteTransaction)" />
		<aop:advisor pointcut-ref="defaultMandatoryWrites" advice-ref="defaultMandatoryWriteTxRollbackAdvice" />
	</aop:config>
	<aop:config>
		<aop:pointcut id="migrationWrites"
			expression="@annotation(org.sagebionetworks.repo.model.transactions.MigrationWriteTransaction)" />
		<aop:advisor pointcut-ref="migrationWrites" advice-ref="migrationWriteTxRollbackAdvice" />
	</aop:config>		
	
</beans>