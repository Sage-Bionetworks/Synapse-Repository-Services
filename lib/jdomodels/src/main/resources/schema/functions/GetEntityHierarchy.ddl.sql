CREATE FUNCTION `getEntityHierarchy`(inputEntityId BIGINT) RETURNS json
    READS SQL DATA
BEGIN
 	DECLARE resultJSON JSON;
	SET SESSION group_concat_max_len=4096;
	
	WITH
	HIER AS (
		WITH RECURSIVE HIER (ENTITY_ID, PARENT_ID, BENEFACTOR_ID, NAME, NODE_TYPE, ACL_ID, DEPTH) AS
			(
				SELECT N.ID, N.PARENT_ID, N.ID AS BENEFACTOR_ID, N.NAME, N.NODE_TYPE, A.ID AS ACL_ID, 1 AS DEPTH
					FROM NODE N LEFT JOIN ACL A ON (N.ID = A.OWNER_ID AND A.OWNER_TYPE = 'ENTITY')
					WHERE N.ID = inputEntityId
				UNION DISTINCT
				SELECT HIER.ENTITY_ID, N.PARENT_ID, N.ID AS BENEFACTOR_ID, N.NAME, N.NODE_TYPE,
					A.ID AS ACL_ID, HIER.DEPTH + 1 AS DEPTH 
					FROM HIER JOIN NODE N ON (HIER.PARENT_ID = N.ID AND N.ID <> 4489) 
					LEFT JOIN ACL A ON (N.ID = A.OWNER_ID AND A.OWNER_TYPE = 'ENTITY')
					WHERE HIER.PARENT_ID IS NOT NULL AND DEPTH < 50
			)
            SELECT * FROM HIER
	),
	PATH AS (
		SELECT ENTITY_ID, GROUP_CONCAT(NAME ORDER BY DEPTH DESC SEPARATOR '/') AS path 
			FROM HIER GROUP BY ENTITY_ID
	),
    PRO AS (
		SELECT ENTITY_ID, BENEFACTOR_ID AS PROJECT_ID FROM HIER 
			WHERE NODE_TYPE = 'project' ORDER BY DEPTH ASC LIMIT 1
    ),
	BEN AS (
		SELECT ENTITY_ID, BENEFACTOR_ID AS BENEFACTOR_ID FROM HIER 
			WHERE ACL_ID IS NOT NULL ORDER BY DEPTH ASC LIMIT 1
    )
 SELECT JSON_OBJECT('path', PATH.path, 'projectId', PRO.PROJECT_ID, 'benefactorId', BEN.BENEFACTOR_ID) INTO resultJSON
	FROM PATH LEFT JOIN PRO ON (PATH.ENTITY_ID = PRO.ENTITY_ID)
	LEFT JOIN BEN ON (PATH.ENTITY_ID = BEN.ENTITY_ID);
	
	SET SESSION group_concat_max_len=1024;
	RETURN resultJSON;
 END