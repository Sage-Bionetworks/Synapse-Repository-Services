WITH
  BEN AS (
	WITH RECURSIVE BEN (ENTITY_ID, PARENT_ID, BENEFACTOR_ID, ACL_ID, DEPTH) AS
			(
				SELECT N.ID AS ENTITY_ID, N.PARENT_ID AS PARENT_ID, N.ID AS BENEFACTOR_ID, A.ID AS ACL_ID, 1 AS DEPTH
					FROM JDONODE N LEFT JOIN ACL A ON (N.ID = A.OWNER_ID AND A.OWNER_TYPE = 'ENTITY')
						WHERE N.ID IN (:entityIds)
				UNION ALL
				SELECT BEN.ENTITY_ID, N.PARENT_ID, N.ID AS BENEFACTOR_ID, A.ID AS ACL_ID, BEN.DEPTH + 1 AS DEPTH 
					FROM BEN JOIN JDONODE N ON (BEN.PARENT_ID = N.ID) LEFT JOIN ACL A ON (N.ID = A.OWNER_ID AND A.OWNER_TYPE = 'ENTITY')
						WHERE BEN.ACL_ID IS NULL AND DEPTH < 100
			)
	SELECT ENTITY_ID, BENEFACTOR_ID, ACL_ID FROM BEN WHERE ACL_ID IS NOT NULL
  ),
  ACC AS (
	SELECT DISTINCT RA.OWNER_ID AS ACL_ID, RAT.STRING_ELE AS ACCESS_TYPE FROM BEN LEFT JOIN JDORESOURCEACCESS RA ON (BEN.ACL_ID = RA.OWNER_ID)
		JOIN JDORESOURCEACCESS_ACCESSTYPE RAT ON (RA.OWNER_ID = RAT.OWNER_ID) WHERE RA.GROUP_ID IN (:usersGroups)
	)
SELECT BEN.ENTITY_ID, MAX(BEN.BENEFACTOR_ID) AS BENEFACTOR_ID, 
COUNT(CASE WHEN ACC.ACCESS_TYPE = 'READ' THEN 1 END) AS READ_COUNT,
COUNT(CASE WHEN ACC.ACCESS_TYPE = 'DOWNLOAD' THEN 1 END) AS DOWNLOAD_COUNT
 FROM BEN JOIN ACC ON (BEN.ACL_ID = ACC.ACL_ID) GROUP BY BEN.ENTITY_ID