package org.sagebionetworks.javadoc.web.services;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import java.io.File;
import java.net.URL;

import org.junit.Before;
import org.junit.Test;

import com.sun.tools.javadoc.Main;



/**
 * Test for the SpringMVCDoclet
 * @author jmhill
 *
 */
public class SpringMVCDocletTest {
	
	File sampleSourceFile;
	File classpathFile;
	File outputDirectory;
	
	@Before
	public void before(){
		// Lookup the test files.
		sampleSourceFile = findFileOnClasspath("ExampleController.java");
		// Find the classpath file generated by the maven-dependency-plugin
		String propertyValue = System.getProperty("auto.generated.classpath");
		if(propertyValue == null){
			// this occurs when run in eclipse.
			propertyValue = "target/gen/auto-generated-classpath.txt";
		}
		System.out.println(propertyValue);
		classpathFile = new File(propertyValue);
		assertTrue("Classpath files does not exist: "+classpathFile.getAbsolutePath(), classpathFile.exists());
		// Lookup the output directory.
		propertyValue = System.getProperty("test.javadoc.output.directory");
		if(propertyValue == null){
			// this occurs when run in eclipse.
			propertyValue = "target/javadoc";
		}
		outputDirectory = new File(propertyValue);
	}
	
	public static File findFileOnClasspath(String fileName){
		URL url = SpringMVCDocletTest.class.getClassLoader().getResource(fileName);
		assertNotNull("Failed to find: "+fileName+" on the classpath", url);
		File file = new File(url.getFile().replaceAll("%20", " "));
		assertTrue(file.exists());
		return file;
	}

	@Test
	public void testGetOutputDirectory(){
		File result = SpringMVCDoclet.getOutputDirectory(new String[0][0]);
		assertNotNull(result);
		assertTrue(result.exists());
		assertTrue(result.isDirectory());
		System.out.println(result.getAbsolutePath());
		// It should be the current working directory.
		assertEquals(System.getProperty("user.dir"), result.getAbsolutePath());

		// Now pass the valid options
		result = SpringMVCDoclet.getOutputDirectory(new String[][]{new String[]{"-d", outputDirectory.getAbsolutePath()+"/testing123"}});
		assertNotNull(result);
		assertTrue(result.exists());
		assertTrue(result.isDirectory());
		System.out.println(result.getAbsolutePath());
		assertEquals(outputDirectory.getAbsolutePath()+File.separator+"testing123", result.getAbsolutePath());
	}

	@Test
	public void testMain(){
		// Run a sample javadoc
		int result = Main.execute(SpringMVCDocletTest.class.getClassLoader(), new String[]{
			"-authControllerName",
			"org.sagebionetworks.samples.ExampleController",
			"-d",
			outputDirectory.getAbsolutePath(),
			"-doclet", SpringMVCDoclet.class.getName(),
			"-classpath",
			"@"+classpathFile.getAbsolutePath(),
			"-verbose",
			sampleSourceFile.getAbsolutePath()
			});
		assertEquals(0, result);
	}

	
}
