package org.sagebionetworks.controller.generator;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertNotNull;
import static org.junit.Assert.assertTrue;

import java.io.File;
import java.net.URL;

import javax.tools.DocumentationTool;
import javax.tools.ToolProvider;

import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.Test;
import org.sagebionetworks.translator.ControllerModelDoclet;

public class ControllerModelDocletTest {
	private static File sampleSourceFile;
	private static File classpathFile;
	private static File outputDirectory;
	
	@BeforeAll
	public static void before(){
		// Lookup the test files.
		sampleSourceFile = findFileOnClasspath("controller/BasicExampleController.java");
		// Find the classpath file generated by the maven-dependency-plugin
		String propertyValue = System.getProperty("auto.generated.classpath");
		if(propertyValue == null){
			// this occurs when run in eclipse.
			propertyValue = "target/gen/auto-generated-classpath.txt";
		}
		classpathFile = new File(propertyValue);
		assertTrue("Classpath files does not exist: "+classpathFile.getAbsolutePath(), classpathFile.exists());
		// Lookup the output directory.
		propertyValue = System.getProperty("test.javadoc.output.directory");
		if(propertyValue == null){
			// this occurs when run in eclipse.
			propertyValue = "target/javadoc";
		}
		outputDirectory = new File(propertyValue);
	}
	
	private static File findFileOnClasspath(String fileName){
		URL url = ControllerModelDocletTest.class.getClassLoader().getResource(fileName);
		assertNotNull("Failed to find: " + fileName + " on the classpath", url);
		File file = new File(url.getFile().replaceAll("%20", " "));
		assertTrue(file.exists());
		return file;
	}
	
	@Test
	public void testRun() {
		DocumentationTool docTool = ToolProvider.getSystemDocumentationTool();
		String[] docletArgs = new String[] {
			"-doclet", ControllerModelDoclet.class.getName(),
			"-docletpath", "@" + classpathFile.getAbsolutePath(),
			"-overviewfile", "overview.html",
			"-sourcepath", sampleSourceFile.getParentFile().getParent(),
			"controller"
		};
		
		for (int i = 0; i < docletArgs.length - 1; i += 2) {
			System.out.println(docletArgs[i] + "  " + docletArgs[i + 1]);
		}
		System.out.println(docletArgs[docletArgs.length - 1]);
		docTool.run(System.in, System.out, System.err, docletArgs);
		assertEquals(1, 1);
	}
}