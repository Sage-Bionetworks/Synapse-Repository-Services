<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org\
                    /2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0\
                             http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>org.sagebionetworks</groupId>

	<artifactId>platform</artifactId>
	<!-- This is not the same as the application version. This is a constant. -->
	<version>develop-SNAPSHOT</version>
	<packaging>pom</packaging>
	<url>http://www.sagebase.org/</url>
	<scm>
		<connection>scm:svn:https://sagebionetworks.jira.com/svn/PLFM/trunk
		</connection>
		<url>http://sagebionetworks.jira.com/source/browse/PLFM</url>
	</scm>
	<name>Sage Bionetworks Platform</name>
	<description>
		Sage Bionetworks Platform
	</description>

	<modules>
		<module>lib</module>
		<module>services</module>
		<module>client</module>
		<module>tools</module>
		<module>integration-test</module>
	</modules>

	<repositories>
		<repository>
			<id>sagebionetworks-releases-local</id>
			<name>sagebionetworks-releases-local</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/libs-releases-local
			</url>
		</repository>
		<repository>
			<id>sagebionetworks-ext</id>
			<name>sagebionetworks-releases-ext</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/ext-releases-local
			</url>
		</repository>
		<repository>
			<id>mvn-gae-plugin-repo</id>
			<url>http://maven-gae-plugin.googlecode.com/svn/repository/</url>
		</repository>
		<repository>
			<id>maven-central-rep-1</id>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
		<repository>
			<id>sun-maven-repository</id>
			<url>http://download.java.net/maven/2/</url>
		</repository>
		<repository>
			<id>apache-repo-releases</id>
			<url>https://repository.apache.org/content/repositories/releases/
			</url>
		</repository>

		<repository>
			<id>central</id>
			<name>Atlassian Public Repository</name>
			<layout>default</layout>
			<url>https://maven.atlassian.com/content/repositories/atlassian-public
			</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>sagebionetworks-plugins-releases-local</id>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/plugins-releases-local/
			</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
		<pluginRepository>
			<id>Codehaus Snapshots</id>
			<url>http://snapshots.repository.codehaus.org/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

	<!-- Only list global dependencies in this file -->
	<dependencyManagement>
		<dependencies>
			<!-- Logging -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.17</version>
			</dependency>
			<!-- The log4j extras provide more thread safe appenders than the main 
				log4j. Used in the ActivityLogger, and also by the other profilers. -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>apache-log4j-extras</artifactId>
				<version>1.1</version>
			</dependency>

			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.1.1</version>
			</dependency>
			<!-- Jena provides ontology APIs including loading and querying for RDF -->
			<dependency>
				<groupId>com.hp.hpl.jena</groupId>
				<artifactId>tdb</artifactId>
				<version>0.8.5</version>
			</dependency>

			<!-- Make sure all the Jackson libraries are of the same version -->
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-core-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-jaxrs</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-xc</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<!-- Used for timer triggers (cron-like) -->
			<dependency>
				<groupId>opensymphony</groupId>
				<artifactId>quartz-all</artifactId>
				<version>1.6.3</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>

			<!-- Spring Framework dependencies -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.spring-library</artifactId>
				<type>libd</type>
				<version>${org.springframework.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>org.springframework.web</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<!-- This was being pulled in as a child dependency of the springframework 
				but the tomcat plugin needs this to be in scope "provided" -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>com.springsource.javax.servlet</artifactId>
				<version>2.5.0</version>
				<scope>provided</scope>
			</dependency>

			<!-- In a tomcat container, such as Elastic Beanstalk, you have to include 
				jstl.jar manually, hence this entry. -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>jstl</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${org.springframework.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aspects</artifactId>
				<version>${org.springframework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjlib</artifactId>
				<version>${org.aspectj.aspectjlib.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjweaver</artifactId>
				<version>${org.aspectj.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${org.aspectj.version}</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>

			<dependency>
				<groupId>cglib</groupId>
				<artifactId>cglib</artifactId>
				<version>2.2</version>
			</dependency>

			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.7</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>1.8.5</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.0</version>
			</dependency>

			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-io</artifactId>
				<version>1.3.2</version>
			</dependency>

			<dependency>
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>1.1</version>
			</dependency>

			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.3</version>
			</dependency>

			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.3</version>
			</dependency>

			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk</artifactId>
				<version>${com.amazonaws.version}</version>
			</dependency>


			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${org.apache.httpcomponents.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpmime</artifactId>
				<version>${org.apache.httpcomponents.version}</version>
			</dependency>

			<!-- Synapse internal dependencies -->
			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>schema-to-pojo-lib</artifactId>
				<version>${schema-to-pojo.version}</version>
			</dependency>
			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>schema-to-pojo-org-json</artifactId>
				<version>${schema-to-pojo.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>schema-to-pojo-gwt</artifactId>
				<version>${schema-to-pojo.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-javadoc</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>repository-managers</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>services-repository</artifactId>
				<version>${project.version}</version>
				<type>war</type>
			</dependency>
			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>services-workers</artifactId>
				<version>${project.version}</version>
				<type>war</type>
			</dependency>
			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-auto-generated</artifactId>
				<version>${project.version}</version>
			</dependency>
			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-shared-models</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-worker</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-communicationUtilities</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-id-generator</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-concepts</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-doi</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-dynamo</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-jdomodels</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-models</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-search</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-securityUtilities</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-stackConfiguration</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>synapseJavaClient</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>synapsePythonClient</artifactId>
				<version>${project.version}</version>
				<classifier>synapse-python-client-assembly</classifier>
				<type>zip</type>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>wikiutil</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>auth-util</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>tool-migration-utility</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>org.sagebionetworks</groupId>
				<artifactId>lib-logging</artifactId>
				<version>${project.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-servlet</artifactId>
				<version>${gwtVersion}</version>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-user</artifactId>
				<version>${gwtVersion}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.google.gwt</groupId>
				<artifactId>gwt-dev</artifactId>
				<version>${gwtVersion}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.imgscalr</groupId>
				<artifactId>imgscalr-lib</artifactId>
				<version>4.2</version>
				<type>jar</type>
				<scope>compile</scope>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>${xstream.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.velocity</groupId>
				<artifactId>velocity</artifactId>
				<version>1.7</version>
			</dependency>
			<!-- Used to for file upload -->
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>1.2</version>
			</dependency>
			<dependency>
				<groupId>com.sun</groupId>
				<artifactId>tools</artifactId>
				<version>1.7</version>
				<scope>system</scope>
				<systemPath>${java.home}/../lib/tools.jar</systemPath>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<!-- Only list globally used plugins in this file -->
	<build>
		<pluginManagement>
			<plugins>
				<!-- Tell the eclipse m2e plugin to execute these lifecycle mappings 
					See: http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>javacc-maven-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>jjtree-javacc</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.sagebionetworks</groupId>
										<artifactId>schema-to-pojo-maven-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-dependency-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>unpack-dependencies</goal>
											<goal>build-classpath</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.bsc.maven</groupId>
										<artifactId>maven-processor-plugin</artifactId>
										<versionRange>[0,)</versionRange>
										<goals>
											<goal>process</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.codehaus.mojo</groupId>
										<artifactId>exec-maven-plugin</artifactId>
										<versionRange>[1,)</versionRange>
										<goals>
											<goal>java</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
				<!-- Java compiler version -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.3.2</version>
					<configuration>
						<source>1.6</source>
						<target>1.6</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.2.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.12</version>
				</plugin>

				<!-- Build JavaDocs -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.9</version>
					<executions>
						<execution>
							<id>attach-javadocs</id>
							<goals>
								<goal>jar</goal>
								<goal>test-jar</goal>
							</goals>
						</execution>
					</executions>
				</plugin>

				<!-- Make a WAR file -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.3</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true
								</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Implementation-Build>${buildNumber}</Implementation-Build>
								<Implementation-Build-Timestamp>${maven.build.timestamp}
								</Implementation-Build-Timestamp>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>

				<!-- Make a JAR file -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true
								</addDefaultImplementationEntries>
							</manifest>
							<manifestEntries>
								<Implementation-Build>${buildNumber}</Implementation-Build>
								<Implementation-Build-Timestamp>${maven.build.timestamp}
								</Implementation-Build-Timestamp>
							</manifestEntries>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>${findbugs-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<!-- To use the clover2 plugin, you will need the license file and add 
						the following property to the ~/.m2/settings.xml file: <maven.clover.licenseLocation>/path/to/clover.license</maven.clover.licenseLocation> -->
					<groupId>com.atlassian.maven.plugins</groupId>
					<artifactId>maven-clover2-plugin</artifactId>
					<version>${maven-clover2-plugin.version}</version>
					<configuration>
						<excludes>
							<exclude>**/*Test.java</exclude>
							<exclude>**/org/sagebionetworks/repo/model/bootstrap/DatabasePreparation.java
							</exclude>
							<exclude>**/org/sagebionetworks/StackConfiguration.java</exclude>
							<exclude>**/org/sagebionetworks/TemplatedConfigurationImpl.java
							</exclude>
							<exclude>**/org/sagebionetworks/SettingsLoader.java</exclude>
							<exclude>**/org/sagebionetworks/StringEncrypter.java</exclude>
							<exclude>**/org/sagebionetworks/ResourceEncoder.java</exclude>
							<exclude>**/org/sagebionetworks/ResourceUtils.java</exclude>
						</excludes>
						<jdk>1.6</jdk>
						<flushPolicy>threaded</flushPolicy>
						<flushInterval>300</flushInterval>
					</configuration>
					<executions>
						<execution>
							<phase>pre-site</phase>
							<goals>
								<goal>instrument</goal>
								<goal>aggregate</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.sagebionetworks</groupId>
					<artifactId>schema-to-pojo-maven-plugin</artifactId>
					<version>${schema-to-pojo.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>com.atlassian.maven.plugins</groupId>
				<artifactId>maven-clover2-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<!-- Specify hard-coded project properties that should be shared here -->
	<!-- Note, do not put in custom developer configuration that should not 
		be shared, esp passwords. Those go in settings.xml -->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- This is just for "eclipse:eclipse" goal to always attempt downloading 
			sources -->
		<downloadSources>true</downloadSources>
		<gwtVersion>2.4.0</gwtVersion>
		<guiceVersion>3.0-rc2</guiceVersion>
		<org.springframework.version>3.0.5.RELEASE
		</org.springframework.version>
		<jackson.version>1.8.1</jackson.version>
		<xstream.version>1.3.1</xstream.version>
		<maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ssZ
		</maven.build.timestamp.format>
		<datanucleus.version>1.1.5</datanucleus.version>
		<org.datanucleus.datanucleus-enhancer.version>1.1.4
		</org.datanucleus.datanucleus-enhancer.version>
		<javax.transaction.jta.version>1.1</javax.transaction.jta.version>
		<javax.jdo.jdo2-api.version>2.3-ec</javax.jdo.jdo2-api.version>
		<mysql.mysql-connector-java.version>5.1.13
		</mysql.mysql-connector-java.version>
		<org.aspectj.aspectjlib.version>1.6.2</org.aspectj.aspectjlib.version>
		<org.aspectj.version>1.6.10</org.aspectj.version>
		<org.apache.commons.commons-dbcp.version>1.4
		</org.apache.commons.commons-dbcp.version>
		<schema-to-pojo.version>0.2.0</schema-to-pojo.version>
		<org.json.version>20090211</org.json.version>
		<com.amazonaws.version>1.3.26</com.amazonaws.version>
		<maven-clover2-plugin.version>3.1.3</maven-clover2-plugin.version>
		<findbugs-maven-plugin.version>2.5.2</findbugs-maven-plugin.version>
		<org.apache.httpcomponents.version>4.2.5
		</org.apache.httpcomponents.version>
		<com.sun.tools.version>1.7</com.sun.tools.version>
	</properties>

	<distributionManagement>
		<repository>
			<id>sagebionetworks</id>
			<name>sagebionetworks-releases</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/libs-releases-local
			</url>
		</repository>
		<snapshotRepository>
			<id>sagebionetworks</id>
			<name>sagebionetworks-snapshots</name>
			<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/libs-snapshots-local
			</url>
			<uniqueVersion>false</uniqueVersion>
		</snapshotRepository>
		<site>
			<id>site-stage</id>
			<url>file:///${project.basedir}/target/staging/</url>
		</site>
	</distributionManagement>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>${findbugs-maven-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>com.atlassian.maven.plugins</groupId>
				<artifactId>maven-clover2-plugin</artifactId>
				<version>${maven-clover2-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>2.7.1</version>
				<configuration>
					<linkXref>true</linkXref>
					<targetJdk>1.6</targetJdk>
					<excludes>
						<exclude>**/*generated*/*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<profiles>
		<profile>
			<id>default-tools.jar</id>
			<activation>
				<jdk>1.7</jdk>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.sun</groupId>
					<artifactId>tools</artifactId>
					<scope>system</scope>
					<systemPath>${java.home}/../lib/tools.jar</systemPath>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
</project>
