<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sagebionetworks</groupId>
		<artifactId>platform</artifactId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<artifactId>integration-test</artifactId>
	<packaging>jar</packaging>
	<name>Integration Tests for All services</name>

	<properties>
		<jacoco.skip>true</jacoco.skip>
		<tomcat-version>8.5.78</tomcat-version>
		<!-- This is the context relative to localhost where the services-repository war will be deployed
			Note that it is important that this matches the org.sagebionetworks.base.endpoint property configured in the lib-stackConfiguration
			since the java client used by the integration tests will use that property to set the base endpoint where to send requests
		-->
		<org.sagebionetworks.repository.context>services-repository-${project.version}</org.sagebionetworks.repository.context>
		<!-- Setting this to true will cause Cargo to setup and start both web
			applications and then wait for shutdown (ctrl-c) This is useful for debugging
			the deployed applications. -->
		<org.sagebionetworks.integration.debug>false</org.sagebionetworks.integration.debug>
	</properties>

	<build>
		<plugins>
			<!-- *** Compiler plugin: we must force test compile because we're using
				a pom packaging that doesn't have this lifecycle mapping. -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- *** Surefire plugin: run unit and exclude integration tests *** -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- *** Failsafe plugin: run integration tests *** -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.2</version>
				<configuration>
					<runOrder>alphabetical</runOrder>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			
			<!-- *** Cargo plugin: start/stop application server and deploy the war file before/after integration tests *** -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven3-plugin</artifactId>
				<version>1.9.10</version>
				<configuration>
					<skip>${maven.test.skip}</skip>
					<wait>${org.sagebionetworks.integration.debug}</wait>
					<!-- Container configuration -->
					<container>
						<containerId>tomcat8x</containerId>
						<timeout>360000</timeout>
						<!-- Download and install tomcat -->
						<zipUrlInstaller>
                            <url>https://repo1.maven.org/maven2/org/apache/tomcat/tomcat/${tomcat-version}/tomcat-${tomcat-version}.zip</url>
						</zipUrlInstaller>
						<systemProperties>
							<org.sagebionetworks.stack>${org.sagebionetworks.stack}</org.sagebionetworks.stack>
							<org.sagebionetworks.stack.instance>${org.sagebionetworks.stack.instance}</org.sagebionetworks.stack.instance>
							<org.sagebionetworks.stack.iam.id>${org.sagebionetworks.stack.iam.id}</org.sagebionetworks.stack.iam.id>
							<org.sagebionetworks.stack.iam.key>${org.sagebionetworks.stack.iam.key}</org.sagebionetworks.stack.iam.key>
							<org.sagebionetworks.rest.api.endpoint>${tomcat.endpoint}/${org.sagebionetworks.repository.context}</org.sagebionetworks.rest.api.endpoint>
							<org.sagebionetworks.repository.database.connection.url>${org.sagebionetworks.repository.database.connection.url}</org.sagebionetworks.repository.database.connection.url>
							<org.sagebionetworks.id.generator.database.connection.url>${org.sagebionetworks.id.generator.database.connection.url}</org.sagebionetworks.id.generator.database.connection.url>
							<org.sagebionetworks.table.cluster.endpoint.0>${org.sagebionetworks.table.cluster.endpoint.0}</org.sagebionetworks.table.cluster.endpoint.0>
							<org.sagebionetworks.table.cluster.schema.0>${org.sagebionetworks.table.cluster.schema.0}</org.sagebionetworks.table.cluster.schema.0>
							<org.sagebionetworks.search.enabled>${org.sagebionetworks.search.enabled}</org.sagebionetworks.search.enabled>
							<org.sagebionetworks.doi.prefix>${org.sagebionetworks.doi.prefix}</org.sagebionetworks.doi.prefix>
							<org.sagebionetworks.doi.datacite.api.endpoint>${org.sagebionetworks.doi.datacite.api.endpoint}</org.sagebionetworks.doi.datacite.api.endpoint>
							<org.sagebionetworks.doi.datacite.enabled>${org.sagebionetworks.doi.datacite.enabled}</org.sagebionetworks.doi.datacite.enabled>
							<org.sagebionetworks.doi.datacite.username>${org.sagebionetworks.doi.datacite.username}</org.sagebionetworks.doi.datacite.username>
							<org.sagebionetworks.doi.datacite.password>${org.sagebionetworks.doi.datacite.password}</org.sagebionetworks.doi.datacite.password>
							<org.sagebionetworks.repository.database.username>${org.sagebionetworks.repository.database.username}</org.sagebionetworks.repository.database.username>
							<org.sagebionetworks.id.generator.database.username>${org.sagebionetworks.id.generator.database.username}</org.sagebionetworks.id.generator.database.username>
							<org.sagebionetworks.google.cloud.enabled>${org.sagebionetworks.google.cloud.enabled}</org.sagebionetworks.google.cloud.enabled>
							<org.sagebionetworks.google.cloud.key>${org.sagebionetworks.google.cloud.key}</org.sagebionetworks.google.cloud.key>
							<org.sagebionetworks.sts.iam.arn>${org.sagebionetworks.sts.iam.arn}</org.sagebionetworks.sts.iam.arn>
						</systemProperties>
					</container>
					<configuration>
						<properties>
							<cargo.jvmargs>
								<!-- -Xdebug -->
								<!-- -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8989 -->
								<!-- -Xnoagent -->
								-Xmx2048m
								-Xms1024m
							</cargo.jvmargs>							
						</properties>
					</configuration>
					<deployables>
						<deployable>
							<groupId>org.sagebionetworks</groupId>
							<artifactId>services-repository</artifactId>
							<type>war</type>
							<properties>
								<context>${org.sagebionetworks.repository.context}</context>
							</properties>
						</deployable>
						<deployable>
							<groupId>org.sagebionetworks</groupId>
							<artifactId>services-workers</artifactId>
							<type>war</type>
						</deployable>
					</deployables>
				</configuration>

				<executions>
					<!-- before integration tests are run: start server -->
					<execution>
						<id>start-container</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<!-- after integration tests are run: stop server -->
					<execution>
						<id>stop-container</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<dependencies>
		<!-- Logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- Sage Bionetworks Dependencies -->
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>auth-util</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>services-repository</artifactId>
			<type>war</type>
		</dependency>
		
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>repository-managers</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>services-workers</artifactId>
			<type>war</type>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-models</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-doi</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>sample-code</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>synapseJavaClient</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-communicationUtilities</artifactId>
		</dependency>

		<!-- Jackson JSON Mapper -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.develop</groupId>
			<artifactId>gwt-syncproxy</artifactId>
			<version>0.3.1.sage</version>
		</dependency>
		
		<dependency>
		  <groupId>dev.samstevens.totp</groupId>
		  <artifactId>totp</artifactId>
		</dependency>

	</dependencies>

</project>
