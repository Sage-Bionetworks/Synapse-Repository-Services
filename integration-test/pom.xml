<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.sagebionetworks</groupId>
		<artifactId>platform</artifactId>
		<version>develop-SNAPSHOT</version>
	</parent>

	<artifactId>integration-test</artifactId>
	<packaging>jar</packaging>
	<name>Integration Tests for All services</name>

	<properties>
		<tomcat-version>7.0.32</tomcat-version>
		<tomcat-file>apache-tomcat-${tomcat-version}</tomcat-file>
		<org.sagebionetworks.authenticationservice.privateendpoint>http://localhost:8080/services-authentication-${project.version}/auth/v1</org.sagebionetworks.authenticationservice.privateendpoint>
		<org.sagebionetworks.authenticationservice.publicendpoint>http://localhost:8080/services-authentication-${project.version}/auth/v1</org.sagebionetworks.authenticationservice.publicendpoint>
		<org.sagebionetworks.repositoryservice.endpoint>http://localhost:8080/services-repository-${project.version}/repo/v1</org.sagebionetworks.repositoryservice.endpoint>
		<org.sagebionetworks.fileservice.endpoint>http://localhost:8080/services-file-${project.version}/file/v1</org.sagebionetworks.fileservice.endpoint>
		<org.sagebionetworks.searchservice.endpoint>http://localhost:8080/repository-search-${project.version}/search/v1</org.sagebionetworks.searchservice.endpoint>
		<org.sagebionetworks.portal.endpoint>http://localhost:8080/portal-${project.version}/Portal</org.sagebionetworks.portal.endpoint>
		<!-- This is where the repository war will be deployed -->
		<org.sagebionetworks.auth.context>services-authentication-${project.version}</org.sagebionetworks.auth.context>
		<org.sagebionetworks.repository.context>services-repository-${project.version}</org.sagebionetworks.repository.context>
		<org.sagebionetworks.portal.context>portal-${project.version}</org.sagebionetworks.portal.context>
		<tomcat.endpoint>http://localhost:8080</tomcat.endpoint>
		<org.sagebionetworks.auth.servlet.prefix>/auth/v1</org.sagebionetworks.auth.servlet.prefix>
		<org.sagebionetworks.repository.servlet.prefix>/repo/v1</org.sagebionetworks.repository.servlet.prefix>
		<org.sagebionetworks.portal.servlet.prefix>/Portal</org.sagebionetworks.portal.servlet.prefix>
		<org.sagebionetworks.auth.service.base.url>${tomcat.endpoint}/${org.sagebionetworks.auth.context}${org.sagebionetworks.auth.servlet.prefix}/</org.sagebionetworks.auth.service.base.url>
		<org.sagebionetworks.repository.service.base.url>${tomcat.endpoint}/${org.sagebionetworks.repository.context}${org.sagebionetworks.repository.servlet.prefix}/</org.sagebionetworks.repository.service.base.url>
		<org.sagebionetworks.portal.base.url>${tomcat.endpoint}/${org.sagebionetworks.portal.context}${org.sagebionetworks.portal.servlet.prefix}/</org.sagebionetworks.portal.base.url>
		<org.sagebionetworks.stackEncryptionKey>${settings.org.sagebionetworks.stackEncryptionKey}</org.sagebionetworks.stackEncryptionKey>
		<!-- Setting this to true will cause Cargo to setup and start both web
			applications and then wait for shutdown (ctrl-c) This is useful for debugging
			the deployed applications. -->
		<org.sagebionetworks.integration.debug>false</org.sagebionetworks.integration.debug>
	</properties>

	<build>
		<plugins>
			<!-- *** Compiler plugin: we must force test compile because we're using
				a pom packaging that doesn't have this lifecycle mapping. -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- This allows use to run the servlet container from maven via mvn tomcat:run
				or deploy to a local tomcat via tomcat:deploy -->
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.0</version>
				<configuration>
					<!-- Deploy this as the root application -->
					<path>/</path>
				</configuration>
			</plugin>

			<!-- *** Surefire plugin: run unit and exclude integration tests *** -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/IT*.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- *** Failsafe plugin: run integration tests *** -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.8</version>
				<configuration>
					<excludes>
						<exclude>**/IT*${bambooITExclude}.java</exclude>
					</excludes>
					<runOrder>alphabetical</runOrder>
					<systemPropertyVariables>
						<local.python27.path>${local.python27.path}</local.python27.path>
						<local.r.path>${local.r.path}</local.r.path>
					</systemPropertyVariables>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>integration-test</goal>
						</goals>
					</execution>
					<execution>
						<id>verify</id>
						<goals>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- *** Cargo plugin: start/stop application server and deploy the ear
				file before/after integration tests *** -->
			<plugin>
				<groupId>org.codehaus.cargo</groupId>
				<artifactId>cargo-maven2-plugin</artifactId>
				<version>1.3.1</version>
				<configuration>
					<wait>${org.sagebionetworks.integration.debug}</wait>
					<!-- Container configuration -->
					<container>
						<timeout>360000</timeout>
						<containerId>tomcat7x</containerId>
						<!-- Download and install tomcat -->
						<zipUrlInstaller>
							<url>http://sagebionetworks.artifactoryonline.com/sagebionetworks/libs-releases-local/apache-tomcat/apache-tomcat/${tomcat-version}/apache-tomcat-${tomcat-version}.zip</url>
							<extractDir>${project.build.directory}/tomcat7x/container</extractDir>
						</zipUrlInstaller>
						<systemProperties>
							<org.sagebionetworks.stackEncryptionKey>${org.sagebionetworks.stackEncryptionKey}</org.sagebionetworks.stackEncryptionKey>
							<org.sagebionetworks.stack.configuration.url>${org.sagebionetworks.stack.configuration.url}</org.sagebionetworks.stack.configuration.url>
							<org.sagebionetworks.stack>${org.sagebionetworks.stack}</org.sagebionetworks.stack>
							<org.sagebionetworks.stack.instance>${org.sagebionetworks.stack.instance}</org.sagebionetworks.stack.instance>
							<org.sagebionetworks.stack.iam.id>${org.sagebionetworks.stack.iam.id}</org.sagebionetworks.stack.iam.id>
							<org.sagebionetworks.stack.iam.key>${org.sagebionetworks.stack.iam.key}</org.sagebionetworks.stack.iam.key>
							<org.sagebionetworks.rest.api.endpoint>${tomcat.endpoint}/${org.sagebionetworks.repository.context}</org.sagebionetworks.rest.api.endpoint>
						</systemProperties>
					</container>
					<configuration>
						<properties>
						    <cargo.jvmargs>
								-Xmx2g
								-Xms128m
								-XX:MaxPermSize=850m
							</cargo.jvmargs>
	
<!-- 							<cargo.jvmargs> -->
<!-- 								-Xdebug -->
<!-- 								-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8989 -->
<!-- 								-Xnoagent -->
<!-- 								-Djava.compiler=NONE -->
<!-- 							</cargo.jvmargs> -->
							
						</properties>
					</configuration>
					<type>standalone</type>
					<home>${project.build.directory}/tomcat7x/container/${tomcat-file}/bin</home>
					<deployables>
						<deployable>
							<groupId>org.sagebionetworks</groupId>
							<artifactId>services-repository</artifactId>
							<type>war</type>
						</deployable>
						<deployable>
							<groupId>org.sagebionetworks</groupId>
							<artifactId>services-workers</artifactId>
							<type>war</type>
						</deployable>
					</deployables>
				</configuration>

				<executions>
					<!-- before integration tests are run: start server -->
					<execution>
						<id>start-container</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
					</execution>
					<!-- after integration tests are run: stop server -->
					<execution>
						<id>stop-container</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
	<dependencies>
		<!-- Logging -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>

		<!-- Sage Bionetworks Dependencies -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>com.springsource.javax.servlet</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>services-repository</artifactId>
			<type>war</type>
		</dependency>
		
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>repository-managers</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>services-workers</artifactId>
			<type>war</type>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-models</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-stackConfiguration</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-id-generator</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-dynamo</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-doi</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>synapseJavaClient</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>bccSetup</artifactId>
			<version>${project.version}</version>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>lib-communicationUtilities</artifactId>
		</dependency>

		<dependency>
			<groupId>org.sagebionetworks</groupId>
			<artifactId>tool-migration-utility</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>org.springframework.web</artifactId>
		</dependency>

		<!-- Jackson JSON Mapper -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.develop</groupId>
			<artifactId>gwt-syncproxy</artifactId>
			<version>0.3.1.sage</version>
		</dependency>

	</dependencies>

</project>
